<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/css" href="/public/css/rss.css" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title><![CDATA[尼采般地抒情]]></title>
    <link>https://www.wztlink1013.com/</link>
    <script xmlns="http://www.w3.org/1999/xhtml" src="/public/js/rss.js"></script>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[什么都无法舍弃，什么也改变不了]]></description>
    <pubDate>Thu Dec 03 2020 12:19:22 GMT+0000 (Coordinated Universal Time)</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[部署出错at formatNunjucksError]]></title>
      <link>https://www.wztlink1013.com/blog/gw1d4z/</link>
      <guid>https://www.wztlink1013.com/blog/gw1d4z/</guid>
      <pubDate>Thu Dec 03 2020 11:01:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[部署出错at formatNunjucksError]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><p>GitHub Actions 流程中 hexo g 出现错误，具体错误在“Vue 笔记”中那篇文章中，有个地方用到了大括号嵌套的情况。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    =====             Context Dump Ends            =====</span><br><span class="line">    at formatNunjucksError (/home/runner/work/website/website/node_modules/hexo/lib/extend/tag.js:102:13)</span><br><span class="line">    at Promise.fromCallback.catch.err (/home/runner/work/website/website/node_modules/hexo/lib/extend/tag.js:124:34)</span><br><span class="line">    at tryCatcher (/home/runner/work/website/website/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (/home/runner/work/website/website/node_modules/bluebird/js/release/promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (/home/runner/work/website/website/node_modules/bluebird/js/release/promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (/home/runner/work/website/website/node_modules/bluebird/js/release/promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (/home/runner/work/website/website/node_modules/bluebird/js/release/promise.js:725:18)</span><br><span class="line">    at _drainQueueStep (/home/runner/work/website/website/node_modules/bluebird/js/release/async.js:93:12)</span><br><span class="line">    at _drainQueue (/home/runner/work/website/website/node_modules/bluebird/js/release/async.js:86:9)</span><br><span class="line">    at Async._drainQueues (/home/runner/work/website/website/node_modules/bluebird/js/release/async.js:102:5)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (/home/runner/work/website/website/node_modules/bluebird/js/release/async.js:15:14)</span><br><span class="line">    at runCallback (timers.js:705:18)</span><br><span class="line">    at tryOnImmediate (timers.js:676:5)</span><br><span class="line">    at processImmediate (timers.js:658:5)</span><br><span class="line">Error: Process completed with <span class="built_in">exit</span> code 2.</span><br></pre></td></tr></table></figure>
<h2 id="问题分析与解决"><a href="#问题分析与解决" class="headerlink" title="问题分析与解决"></a>问题分析与解决</h2><p>上述代码中第二行其实已经说的很明确 <code>at formatNunjucksError</code><br>但是 hexo 中，渲染过程中用到的是 Nunjucks，在 Nunjucks 中双大括号被视为语法，所以报错。</p>
<h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p><a href="https://www.wztlink1013.com/blog/pxpix4/">https://www.wztlink1013.com/blog/pxpix4/</a></p>
<p>其实之前遇到过类似的问题……写的博客还是要经常回顾……</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/gw1d4z/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[GitHub多人协作功能Pull requests]]></title>
      <link>https://www.wztlink1013.com/blog/iwvugw/</link>
      <guid>https://www.wztlink1013.com/blog/iwvugw/</guid>
      <pubDate>Wed Dec 02 2020 13:04:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[GitHub多人协作功能Pull requests]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="给出一个初始场景"><a href="#给出一个初始场景" class="headerlink" title="给出一个初始场景"></a>给出一个初始场景</h2><p>小吴和小王同时开发一个项目 project，该项目托管到 GitHub 上，假定该项目托管到小吴的 GitHub 上，小王要想同时开发这个 project，就必须要 fork 小吴的这个 project，最后两个人 GitHub 仓库是这个样子的：</p>
<p>小吴：xiaowu/project<br>小王：xiaowang/project</p>
<p>（需要明确一点，小吴小王各自的 project 仓库现在就相当各做各的事情了）</p>
<h2 id="具体工作场景"><a href="#具体工作场景" class="headerlink" title="具体工作场景"></a>具体工作场景</h2><p>小王的仓库 xiaowang/project 改了代码，想要 push 合并到小吴的仓库 xiaowu/project 中，这里分两种情况。</p>
<h3 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h3><p><strong>小王在从 fork 小吴仓库到现在这段期间，小吴没有对 xiaowu/project 做任何改动</strong></p>
<blockquote>
<p>处理方法：直接 Pull request<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606915274704-123b219d-d7fe-4816-88c4-91ba11b5c466.png#align=left&amp;display=inline&amp;height=143&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=285&amp;originWidth=1917&amp;size=47997&amp;status=done&amp;style=shadow&amp;width=958.5" alt="image.png"> &gt; <img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606915405152-c1e60a93-99fb-42d5-a7a5-87c564fe53d4.png#align=left&amp;display=inline&amp;height=270&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=540&amp;originWidth=1920&amp;size=80075&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br>可以看到 1 区域显示 Able to merge，表明这个 Pull request 对于双方是没有矛盾的</p>
</blockquote>
<h3 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h3><p><strong>小王在从 fork 小吴仓库到现在这段期间，小吴又在 xiaowu/project 里面做了改动，就相当于小王 fork 过后，两个人都对各自的仓库更新了，然后小王想将自己的改动推送到小吴那里</strong></p>
<blockquote>
<p><strong><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606916524143-c5076532-2497-4923-986f-d442122e6de7.png#align=left&amp;display=inline&amp;height=287&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=574&amp;originWidth=1920&amp;size=91126&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"></strong> &gt; <strong>可以发现 1 处并没有那么顺利，因为产生了冲突，但是 2 处仍然可以新建一个 request 请求，先点击 2</strong> &gt; <strong><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606916762342-e5215ae5-cf61-43ac-9051-f73c40de1fb1.png#align=left&amp;display=inline&amp;height=307&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=613&amp;originWidth=1191&amp;size=52688&amp;status=done&amp;style=shadow&amp;width=595.5" alt="image.png"></strong> &gt; <strong>点击之后会这样 👇</strong> &gt; <strong><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606916826669-b406d584-50a7-49d5-9044-166bba4bc75f.png#align=left&amp;display=inline&amp;height=133&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=266&amp;originWidth=1284&amp;size=32978&amp;status=done&amp;style=shadow&amp;width=642" alt="image.png"></strong><br>1 处显示矛盾的文件（就是小吴和小王在各自的仓库都进行了更改）<br>我们点击 2 处<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606916998671-6b369cf8-f6dc-4ad3-ba0b-d2f7006b7804.png#align=left&amp;display=inline&amp;height=198&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=396&amp;originWidth=1920&amp;size=65448&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br>接下来解决这个问题并且点击 Mark as resolved 按钮就可以了<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606917076365-e79652f9-3c56-4259-87d4-b6e979af277d.png#align=left&amp;display=inline&amp;height=181&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=361&amp;originWidth=1920&amp;size=44612&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"> &gt; <img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606917146702-bc316303-78f2-4746-94fa-72e4cda90dd0.png#align=left&amp;display=inline&amp;height=196&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=391&amp;originWidth=1920&amp;size=87061&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br>最后就会出现下面的图，接下来，小吴在他的 GitHub 上同意接受这个请求就可以了。（或者小王有权限小王自己接受也可以）<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1606917264180-37c25758-4db9-44f8-a3f6-0ca725d6c0fd.png#align=left&amp;display=inline&amp;height=435&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=869&amp;originWidth=1435&amp;size=132722&amp;status=done&amp;style=shadow&amp;width=717.5" alt="image.png"></p>
</blockquote>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/iwvugw/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[P224.基本计算器]]></title>
      <link>https://www.wztlink1013.com/blog/ckr31m/</link>
      <guid>https://www.wztlink1013.com/blog/ckr31m/</guid>
      <pubDate>Tue Dec 01 2020 11:21:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[P224.基本计算器]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="问题思路"><a href="#问题思路" class="headerlink" title="问题思路"></a>问题思路</h2><p>用栈来作为临时存取非括号的求和数。对字符串进行逐个遍历，然后对遇到的每个字符串进行判断</p>
<ul>
<li>数字：将其求和到 sum 当中</li>
<li>（：将上述 sum 和符号压入栈内</li>
<li>）：将栈内的元素取出与现有 sum 求和</li>
<li>+：直接走</li>
<li>-：直接走不过给下一个计算数提前加负号</li>
</ul>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wztlink1013.problems.leetcode.editor.cn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// P224.基本计算器</span></span><br><span class="line"><span class="comment">//实现一个基本的计算器来计算一个简单的字符串表达式的值。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 字符串表达式可以包含左括号 ( ，右括号 )，加号 + ，减号 -，非负整数和空格 。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 示例 1:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 输入: "1 + 1"</span></span><br><span class="line"><span class="comment">//输出: 2</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 示例 2:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 输入: " 2-1 + 2 "</span></span><br><span class="line"><span class="comment">//输出: 3</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 示例 3:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 输入: "(1+(4+5+2)-3)+(6+8)"</span></span><br><span class="line"><span class="comment">//输出: 23</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 说明：</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 你可以假设所给定的表达式都是有效的。</span></span><br><span class="line"><span class="comment">// 请不要使用内置的库函数 eval。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Related Topics 栈 数学</span></span><br><span class="line"><span class="comment">// 👍 309 👎 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">P224BasicCalculator</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> P224BasicCalculator().<span class="keyword">new</span> Solution();</span><br><span class="line">        <span class="keyword">int</span> key_1 = solution.calculate(<span class="string">"7896979"</span>);</span><br><span class="line">        <span class="keyword">int</span> key_2 = solution.calculate(<span class="string">"(23-2)-33+1111"</span>);</span><br><span class="line">        System.out.println(key_1);</span><br><span class="line">        System.out.println(key_2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//leetcode submit region begin(Prohibit modification and deletion)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Integer&gt; stack_1 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sign = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(ch)) &#123;</span><br><span class="line">                num = <span class="number">10</span> * num + (<span class="keyword">int</span>) (ch - <span class="string">'0'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'+'</span>) &#123;</span><br><span class="line">                num = num * sign;</span><br><span class="line">                sum = sum + num;</span><br><span class="line">                sign = <span class="number">1</span>;</span><br><span class="line">                num = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'-'</span>) &#123;</span><br><span class="line">                num = num * sign;</span><br><span class="line">                sum = sum + num;</span><br><span class="line">                sign = -<span class="number">1</span>;</span><br><span class="line">                num = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'('</span>) &#123;</span><br><span class="line">                stack_1.push(sum);</span><br><span class="line">                stack_1.push(sign);</span><br><span class="line">                sum = <span class="number">0</span>;</span><br><span class="line">                num = <span class="number">0</span>;</span><br><span class="line">                sign = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">')'</span>) &#123;</span><br><span class="line">                num = num * sign;</span><br><span class="line">                sum = sum + num;</span><br><span class="line">                sum = stack_1.pop() * sum;</span><br><span class="line">                sum = sum + stack_1.pop();</span><br><span class="line">                num = <span class="number">0</span>;</span><br><span class="line">                sign = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        sum = sum + sign * num;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="comment">//leetcode submit region end(Prohibit modification and deletion)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ckr31m/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[.gitignore文件使用总结]]></title>
      <link>https://www.wztlink1013.com/blog/hgxgvd/</link>
      <guid>https://www.wztlink1013.com/blog/hgxgvd/</guid>
      <pubDate>Fri Nov 27 2020 09:11:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[在Git项目将要提交到github仓库的时候，有些时候我们想要将指定文件不push，例如含有敏感信息类似token的文件，或者.class、.xml、等文件]]>
      
      </description>
      <content:encoded><![CDATA[<blockquote>
<p>这篇文章是根据博客园用户<a href="https://home.cnblogs.com/u/kevingrace/" target="_blank" rel="noopener">散尽浮华</a>整理来的，原文请看：<a href="https://www.cnblogs.com/kevingrace/p/5690241.html" target="_blank" rel="noopener">https://www.cnblogs.com/kevingrace/p/5690241.html</a></p>
</blockquote>
<p>在 Git 项目将要提交到 github 仓库的时候，有些时候我们想要将指定文件不 push，例如含有敏感信息类似 token 的文件，或者.class、.xml、等文件</p>
<h2 id="忽略指定文件的-push-的三种方式"><a href="#忽略指定文件的-push-的三种方式" class="headerlink" title="忽略指定文件的 push 的三种方式"></a>忽略指定文件的 push 的三种方式</h2><ul>
<li>方式一：在 Git 项目中定义.gitignore 文件</li>
<li>方式二：在 Git 项目的设置中指定排除文件</li>
<li>方式三：定义 Git 全局的 .gitignore 文件</li>
</ul>
<h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#               表示此为注释,将被Git忽略</span></span><br><span class="line">*<span class="string">.a</span>             表示忽略所有 <span class="string">.a</span> 结尾的文件</span><br><span class="line">!lib.a          表示但lib.a除外</span><br><span class="line"><span class="string">/TODO</span>           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span><br><span class="line">build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；</span><br><span class="line">doc/*<span class="string">.txt</span>       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt</span><br><span class="line"></span><br><span class="line">bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span><br><span class="line"><span class="string">/bin</span>:           表示忽略根目录下的bin文件</span><br><span class="line">/*<span class="string">.c</span>:           表示忽略cat.c，不忽略 build/cat.c</span><br><span class="line">debug/*<span class="string">.obj</span>:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj</span><br><span class="line">**<span class="string">/foo</span>:         表示忽略<span class="string">/foo</span>,a/foo,a/b/foo等</span><br><span class="line">a/**<span class="string">/b</span>:         表示忽略a/b, a/x/b,a/x/y/b等</span><br><span class="line">!<span class="string">/bin/run.sh</span>    表示不忽略bin目录下的run.sh文件</span><br><span class="line">*<span class="string">.log</span>:          表示忽略所有 <span class="string">.log</span> 文件</span><br><span class="line">config.php:     表示忽略当前路径的 config.php 文件</span><br><span class="line"></span><br><span class="line"><span class="string">/mtk/</span>           表示过滤整个文件夹</span><br><span class="line">*<span class="string">.zip</span>           表示过滤所有<span class="string">.zip</span>文件</span><br><span class="line"><span class="string">/mtk/do.c</span>       表示过滤某个具体文件</span><br><span class="line"></span><br><span class="line">被过滤掉的文件就不会出现在git仓库中（gitlab或github）了，当然本地库中还有，只是push的时候不会上传。</span><br><span class="line"></span><br><span class="line">需要注意的是，gitignore还可以指定要将哪些文件添加到版本管理中，如下：</span><br><span class="line">!*<span class="string">.zip</span></span><br><span class="line">!<span class="string">/mtk/one.txt</span></span><br><span class="line"></span><br><span class="line">唯一的区别就是规则开头多了一个感叹号，Git会将满足这类规则的文件添加到版本管理中。为什么要有两种规则呢？</span><br><span class="line">想象一个场景：假如我们只需要管理<span class="string">/mtk/</span>目录中的one.txt文件，这个目录中的其他文件都不需要管理，那么<span class="string">.gitignore</span>规则应写为：：</span><br><span class="line"><span class="string">/mtk/</span>*</span><br><span class="line">!<span class="string">/mtk/one.txt</span></span><br><span class="line"></span><br><span class="line">假设我们只有过滤规则，而没有添加规则，那么我们就需要把<span class="string">/mtk/</span>目录下除了one.txt以外的所有文件都写出来！</span><br><span class="line">注意上面的<span class="string">/mtk/</span>*不能写为<span class="string">/mtk/</span>，否则父目录被前面的规则排除掉了，one.txt文件虽然加了!过滤规则，也不会生效！</span><br><span class="line"></span><br><span class="line"><span class="params">----------------------------------------------------------------------------------</span></span><br><span class="line">还有一些规则如下：</span><br><span class="line">fd1/*</span><br><span class="line">说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 <span class="string">/fd1/</span> 目录，还是某个子目录 <span class="string">/child/fd1/</span> 目录，都会被忽略；</span><br><span class="line"></span><br><span class="line"><span class="string">/fd1/</span>*</span><br><span class="line">说明：忽略根目录下的 <span class="string">/fd1/</span> 目录的全部内容；</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">!<span class="string">.gitignore</span></span><br><span class="line">!<span class="string">/fw/</span></span><br><span class="line"><span class="string">/fw/</span>*</span><br><span class="line">!<span class="string">/fw/bin/</span></span><br><span class="line">!<span class="string">/fw/sf/</span></span><br><span class="line">说明：忽略全部内容，但是不忽略 <span class="string">.gitignore</span> 文件、根目录下的 <span class="string">/fw/bin/</span> 和 <span class="string">/fw/sf/</span> 目录；注意要先对bin/的父目录使用!规则，使其不被排除。</span><br></pre></td></tr></table></figure>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li>文章主要参考：<a href="https://www.cnblogs.com/kevingrace/p/5690241.html" target="_blank" rel="noopener">https://www.cnblogs.com/kevingrace/p/5690241.html</a></li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/hgxgvd/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Vue笔记]]></title>
      <link>https://www.wztlink1013.com/blog/hu36gc/</link>
      <guid>https://www.wztlink1013.com/blog/hu36gc/</guid>
      <pubDate>Thu Nov 26 2020 08:05:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[Vue学习笔记]]>
      
      </description>
      <content:encoded><![CDATA[<h3 id="一些函数"><a href="#一些函数" class="headerlink" title="一些函数"></a>一些函数</h3><ul>
<li>this：应该就是创建的 Vue 这个对象， <code>this.message = this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)</code></li>
<li>字符串函数<ul>
<li>split()，join()：拆开，组合</li>
</ul>
</li>
<li>component：定义组件<ul>
<li>data：必须是一个函数，data 选项必须是一个函数，不然</li>
<li>props：声明为属性，再该组件的 template 下可以直接使用</li>
<li>template：组件模板</li>
<li>methods 等等 Vue 属性都有</li>
</ul>
</li>
<li>Object.freeze()：会阻止其响应式更新，系统无法再追踪变化</li>
<li>＄：用来区分 Vue 实例和变量，Vue 实例用＄， <code>vm.$el === document.getElementById(&#39;example&#39;)</code></li>
<li>input 里面的 key：防止切换输入形式值不变的情况 <code>&lt;input placeholder=&quot;Enter your username&quot; key=&quot;username-input&quot;&gt;</code></li>
</ul>
<h3 id="Vue-实例属性"><a href="#Vue-实例属性" class="headerlink" title="Vue 实例属性"></a>Vue 实例属性</h3><ul>
<li>el：绑定 dom</li>
<li>data：数据域</li>
<li>methods：定义方法</li>
<li>生命周期相关函数，可以在不同阶段添加不同代码<ul>
<li>created</li>
<li>mounted</li>
<li>updated</li>
<li>destroyed 等</li>
</ul>
</li>
<li>computed：计算属性</li>
<li>watch：侦听器</li>
</ul>
<h3 id="插值、指令"><a href="#插值、指令" class="headerlink" title="插值、指令"></a>插值、指令</h3><ul>
<li><code>{ {</code> <code>} }</code> ：插值为文本</li>
<li>v-once：一次性插值</li>
<li>v-html：插入并显示为 html 代码</li>
<li><strong>v-bind：显示信息【简写：英文冒号:】</strong></li>
<li><code>v-on:click=&quot;函数触发&quot;</code> ：事件监听器【简写： <code>@</code>  符号】</li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">v-on<span class="function">:click</span>=<span class="string">"greet"</span>：其中greet是Vue实例中methods中的一个方法</span><br><span class="line">事件修饰符</span><br><span class="line"><span class="string">.stop</span></span><br><span class="line"><span class="string">.prevent</span></span><br><span class="line"><span class="string">.capture</span></span><br><span class="line"><span class="string">.self</span></span><br><span class="line"><span class="string">.once</span></span><br><span class="line"><span class="string">.passive</span></span><br><span class="line">＄emit：子组件可以使用 $emit 触发父组件的自定义事件。</span><br><span class="line">vm.$emit<span class="params">( event, arg )</span> <span class="string">//</span>触发当前实例上的事件</span><br><span class="line">vm.$on<span class="params">( event, fn )</span>;<span class="string">//</span>监听event事件后运行 fn</span><br></pre></td></tr></table></figure>
<ul>
<li><p>v-if=”表达式”：</p>
<blockquote>
<p>v-else：搭配用的还可以有<br>v-else-if<br>v-if 优先级弱于 v-for</p>
</blockquote>
</li>
<li><p>v-show：与 v-if 不同的是不管怎样都会被渲染</p>
</li>
<li><p>v-for=”num in nums”：循环</p>
<blockquote>
<p>支持第二个参数（即索引值）<br>也可以直接循环对象，可以将将对象的各个属性值全部打印出来<br>组件使用 v-for 的时候，key 值是必须的 1</p>
</blockquote>
</li>
<li><p>v-model：表单输入和应用状态之间的双向绑定</p>
</li>
</ul>
<h3 id="数组相关"><a href="#数组相关" class="headerlink" title="数组相关"></a>数组相关</h3><blockquote>
<p>具体也可以参考 MDN 上的这几个函数介绍</p>
</blockquote>
<ul>
<li>push()：对一个对象数组添加一个元素，注意形式 <code>app_test_list.items.push({text:&quot;用push添加元素&quot;});</code></li>
<li>pop()：</li>
<li>shift()</li>
<li>unshift()</li>
<li>splice()</li>
<li>sort()</li>
<li><p>reverse()</p>
</li>
<li><p>filter()</p>
</li>
<li>concat()</li>
<li>slice()</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>属性值之间使用冒号</li>
<li>只有赋值才是等号</li>
<li>对象内的属性之间用逗号分隔开</li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/hu36gc/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[sdnu-dboj-成绩管理-Movie]]></title>
      <link>https://www.wztlink1013.com/blog/zhdy1x/</link>
      <guid>https://www.wztlink1013.com/blog/zhdy1x/</guid>
      <pubDate>Thu Nov 19 2020 06:23:23 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[sdnu-dboj-成绩管理-Movie]]>
      
      </description>
      <content:encoded><![CDATA[<blockquote>
<p>题目入口：<a href="http://db.itoi.sd.cn/problem/set" target="_blank" rel="noopener">http://db.itoi.sd.cn/problem/set</a></p>
</blockquote>
<h2 id="成绩管理相关题目"><a href="#成绩管理相关题目" class="headerlink" title="成绩管理相关题目"></a>成绩管理相关题目</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line"><span class="keyword">select</span> Sno, Sname</span><br><span class="line">true<span class="keyword">from</span> Student</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sno, Sdept</span><br><span class="line">true<span class="keyword">from</span> Student</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sno, Sdept</span><br><span class="line">true<span class="keyword">from</span> Student</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> Sno</span><br><span class="line">true<span class="keyword">from</span> SC</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> Sname</span><br><span class="line">true<span class="keyword">from</span> Student</span><br><span class="line">true<span class="keyword">where</span> Sdept=<span class="string">'CS'</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sage</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sage&lt;<span class="number">20</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Grade&lt;<span class="number">60</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sdept, Sage</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sage&gt;=<span class="number">20</span> <span class="keyword">and</span> Sage&lt;=<span class="number">23</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sdept, Sage</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sage&lt;<span class="number">20</span> <span class="keyword">or</span> Sage&gt;<span class="number">23</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="keyword">select</span> Sname, Ssex</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sdept=<span class="string">'CS'</span> <span class="keyword">or</span> Sdept=<span class="string">'MA'</span> <span class="keyword">or</span> Sdept=<span class="string">'IS'</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="keyword">select</span> Sname, Ssex</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sdept <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'CS'</span>, <span class="string">'MA'</span>, <span class="string">'IS'</span>)</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sno, Ssex</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sname <span class="keyword">like</span> <span class="string">'刘_'</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sno</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sname <span class="keyword">like</span> <span class="string">'_立'</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="keyword">select</span> Sname, Sno, Ssex</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sname <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">'刘_'</span></span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="keyword">select</span> Sno, Cno</span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Grade <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="keyword">select</span> Sname</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">where</span> Sdept=<span class="string">'CS'</span> <span class="keyword">and</span> Sage&lt;<span class="number">20</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="keyword">select</span> Sno, Grade</span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Cno=<span class="string">'3'</span></span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> Grade <span class="keyword">desc</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> Sdept <span class="keyword">asc</span>, Sage <span class="keyword">desc</span></span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(Sno) <span class="keyword">as</span> <span class="string">'COUNT'</span></span><br><span class="line">    <span class="keyword">from</span> Student</span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(Sno) <span class="keyword">as</span> <span class="keyword">COUNT</span></span><br><span class="line">true<span class="keyword">from</span> (</span><br><span class="line">true<span class="keyword">select</span> Sno</span><br><span class="line">truetrue<span class="keyword">from</span> SC</span><br><span class="line">truetrue<span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line">true)<span class="keyword">as</span> <span class="keyword">test</span></span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(Grade) <span class="keyword">as</span> <span class="keyword">AVG</span></span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Cno=<span class="string">'1'</span></span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(Grade) <span class="keyword">as</span> <span class="keyword">MAX</span></span><br><span class="line">    <span class="keyword">from</span> SC</span><br><span class="line">    <span class="keyword">where</span> Cno=<span class="string">'1'</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">SUM</span>(Ccredit) <span class="keyword">as</span> <span class="keyword">SUM</span></span><br><span class="line">true<span class="keyword">from</span> Course, SC</span><br><span class="line">true<span class="keyword">where</span> Course.Cno=SC.Cno</span><br><span class="line">true<span class="keyword">and</span> Sno=<span class="string">'201215121'</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="keyword">select</span> Cno, <span class="keyword">count</span>(Grade) <span class="keyword">as</span> <span class="keyword">COUNT</span></span><br><span class="line">true<span class="keyword">from</span> SC</span><br><span class="line">true<span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line">true<span class="keyword">from</span>(</span><br><span class="line">true<span class="keyword">select</span> Sno, <span class="keyword">count</span>(Grade) <span class="keyword">as</span> <span class="keyword">COUNT</span></span><br><span class="line">truetrue<span class="keyword">from</span> SC</span><br><span class="line">truetrue<span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br><span class="line">true)<span class="keyword">as</span> <span class="keyword">test</span></span><br><span class="line">true<span class="keyword">where</span> <span class="keyword">COUNT</span>&gt;<span class="number">2</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="keyword">select</span> Sno, <span class="keyword">AVG</span>(Grade) <span class="keyword">as</span> <span class="keyword">AVG</span></span><br><span class="line">true<span class="keyword">from</span> SC</span><br><span class="line">true<span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br><span class="line">true<span class="keyword">having</span> <span class="keyword">AVG</span>(Grade)&gt;=<span class="number">88</span></span><br><span class="line"><span class="number">26</span></span><br><span class="line"><span class="keyword">select</span> Student.Sno, Sname, Ssex, Sage, Sdept, Cno, Grade</span><br><span class="line">    <span class="keyword">from</span> Student <span class="keyword">inner</span> <span class="keyword">join</span> SC</span><br><span class="line">    <span class="keyword">on</span> Student.Sno=SC.Sno</span><br><span class="line"><span class="number">27</span></span><br><span class="line"><span class="keyword">SELECT</span> x.Cno, y.Cpno</span><br><span class="line"><span class="keyword">FROM</span> Course x, Course y</span><br><span class="line"><span class="keyword">WHERE</span> x.Cpno = y.Cno</span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="keyword">select</span> Student.Sno, Student.Sname</span><br><span class="line">true<span class="keyword">from</span> Student, SC</span><br><span class="line">true<span class="keyword">where</span> Student.Sno=SC.Sno</span><br><span class="line">truetrue<span class="keyword">and</span> SC.Cno=<span class="string">'2'</span></span><br><span class="line">truetrue<span class="keyword">and</span> SC.Grade&gt;<span class="number">80</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="keyword">select</span> test.Sno, test.Sname, Course.Cname, test.Grade</span><br><span class="line"><span class="keyword">from</span> Course <span class="keyword">join</span></span><br><span class="line">truetrue(<span class="keyword">select</span> SC.Sno, SC.Cno, Student.Sname, SC.Grade</span><br><span class="line">truetruetrue<span class="keyword">from</span> Student <span class="keyword">join</span> SC</span><br><span class="line">truetruetruetrue<span class="keyword">on</span> Student.Sno=SC.Sno)<span class="keyword">as</span> <span class="keyword">test</span></span><br><span class="line">truetrue<span class="keyword">on</span> Course.Cno=test.Cno</span><br></pre></td></tr></table></figure>
<h2 id="Movie-相关题目"><a href="#Movie-相关题目" class="headerlink" title="Movie 相关题目"></a>Movie 相关题目</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">30</span><br><span class="line"><span class="keyword">select</span> title</span><br><span class="line">true<span class="keyword">from</span> movie</span><br><span class="line">true<span class="keyword">where</span> director=<span class="string">'Steven Spielberg'</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span></span><br><span class="line">true<span class="keyword">from</span> movie</span><br><span class="line">true<span class="keyword">where</span> <span class="keyword">mID</span> <span class="keyword">in</span> (</span><br><span class="line">truetrue<span class="keyword">select</span> <span class="keyword">mID</span></span><br><span class="line">truetruetrue<span class="keyword">from</span> rating</span><br><span class="line">truetruetrue<span class="keyword">where</span> stars=<span class="string">'4'</span> <span class="keyword">or</span> stars=<span class="string">'5'</span></span><br><span class="line">truetruetrue)</span><br><span class="line">true<span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">year</span> <span class="keyword">asc</span></span><br><span class="line"><span class="number">32</span></span><br><span class="line"><span class="keyword">select</span> title</span><br><span class="line">true<span class="keyword">from</span> movie</span><br><span class="line">true<span class="keyword">where</span> <span class="keyword">mID</span> <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">truetrue<span class="keyword">select</span> <span class="keyword">mID</span></span><br><span class="line">truetruetrue<span class="keyword">from</span> rating)</span><br><span class="line"><span class="number">33</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line">true<span class="keyword">from</span> reviewer</span><br><span class="line">true<span class="keyword">where</span> rID <span class="keyword">in</span> (</span><br><span class="line">truetrue<span class="keyword">select</span> rID</span><br><span class="line">truetruetrue<span class="keyword">from</span> rating</span><br><span class="line">truetruetrue<span class="keyword">where</span> ratingDate <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line"><span class="number">34</span></span><br><span class="line"><span class="keyword">select</span> reviewer.name, test.title, test.stars, test.ratingDate</span><br><span class="line"><span class="keyword">from</span> reviewer <span class="keyword">join</span> (</span><br><span class="line">true<span class="keyword">select</span> movie.title, rating.rID, rating.stars, rating.ratingDate</span><br><span class="line">true<span class="keyword">from</span> movie <span class="keyword">join</span> rating</span><br><span class="line">true<span class="keyword">on</span> movie.mID=rating.mID</span><br><span class="line">true) <span class="keyword">as</span> <span class="keyword">test</span></span><br><span class="line"><span class="keyword">on</span> reviewer.rID=test.rID</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> reviewer.name, test.title, test.stars</span><br><span class="line"><span class="number">35</span></span><br><span class="line"></span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="keyword">select</span> movie.title, rating_2.stars_avg <span class="keyword">as</span> stars</span><br><span class="line"><span class="keyword">from</span> movie <span class="keyword">join</span> (</span><br><span class="line">true<span class="keyword">select</span> <span class="keyword">mID</span>, <span class="keyword">AVG</span>(stars) <span class="keyword">as</span> stars_avg</span><br><span class="line">true<span class="keyword">from</span> rating</span><br><span class="line">true<span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">mID</span>) <span class="keyword">as</span> rating_2</span><br><span class="line"><span class="keyword">on</span> movie.mID=rating_2.mID</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> stars <span class="keyword">desc</span>, title</span><br><span class="line"><span class="number">38</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> reviewer</span><br><span class="line"><span class="keyword">where</span> rID <span class="keyword">in</span>(</span><br><span class="line">true<span class="keyword">select</span> rID</span><br><span class="line">true<span class="keyword">from</span> rating</span><br><span class="line">true<span class="keyword">group</span> <span class="keyword">by</span> rID</span><br><span class="line">true<span class="keyword">having</span> <span class="keyword">COUNT</span>(rID)&gt;=<span class="number">3</span>)</span><br><span class="line"><span class="number">39</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> reviewer</span><br><span class="line"><span class="keyword">where</span> rID <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> rID</span><br><span class="line"><span class="keyword">from</span> rating</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">mID</span> <span class="keyword">in</span> (</span><br><span class="line">true<span class="keyword">select</span> <span class="keyword">mID</span></span><br><span class="line">true<span class="keyword">from</span> movie</span><br><span class="line">true<span class="keyword">where</span> title=<span class="string">'Gone with the Wind'</span>))</span><br><span class="line"> <span class="number">40</span></span><br><span class="line"> <span class="keyword">select</span> temp.name <span class="keyword">as</span> <span class="keyword">name</span>, movie.title <span class="keyword">as</span> title, temp.stars <span class="keyword">as</span> stars</span><br><span class="line">true<span class="keyword">from</span> movie <span class="keyword">join</span> (</span><br><span class="line">truetrue<span class="keyword">select</span> rating.stars, reviewer.name, rating.mID</span><br><span class="line">truetrue<span class="keyword">from</span> rating <span class="keyword">join</span> reviewer</span><br><span class="line">truetrue<span class="keyword">on</span> rating.rID=reviewer.rID) <span class="keyword">as</span> temp</span><br><span class="line">true<span class="keyword">on</span> movie.mID=temp.mID</span><br><span class="line">true<span class="keyword">where</span> movie.director=temp.name</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/zhdy1x/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[贪心算法-Huffman算法]]></title>
      <link>https://www.wztlink1013.com/blog/ggu8v9/</link>
      <guid>https://www.wztlink1013.com/blog/ggu8v9/</guid>
      <pubDate>Sat Nov 14 2020 06:24:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[贪心算法-Huffman算法]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>压缩算法，目的就是根据字母的出现频率来“按需分配”编码来优化编码方式。</p>
<p>比如：给出一串字母 <code>Huffman Coding</code>   ，按照计算机处理形式，会根据 ascll 码将这串字符编码，具体形式（十进制）就是 104 117 102 102 109 97 110 32 67 111 100 105 110 103，然后转换成二进制，最后会得到需要 97 个比特来存储。</p>
<h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>算法角度来讲对上述问题 ascll 编码方式是浪费空间的，优化方向是改变编码方式，根据字母出现的频率来“按需分配”进制位。</p>
<p>给出下面所给出的字母，以及出现的频率，来得到哈夫曼编码<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605340774734-5ec5e8f1-0fae-47ff-8ded-dccf9611a3ad.png#align=left&amp;display=inline&amp;height=45&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=89&amp;originWidth=411&amp;size=4276&amp;status=done&amp;style=shadow&amp;width=205.5" alt="image.png"><br>先提出将频率小的依次加入。d 和 h 组合权值为 9(或者说 A 只是称呼方便)，然后将这个 9“替换 d 和 h”代入整个序列，在进行插入树操作，</p>
<blockquote>
<p>过程中，遵循数字大的在左数字小的在右原则（互换也没关系，只不过换的是二进制的 0 和 1）</p>
</blockquote>
<p>在进行到 E 的时候，此时的队列应该为 120 107 42 37，所以此时需要重新调整队列，然后进行到结束。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605340899720-d8867a90-d01c-4bf6-8ec7-ca0e812a99dd.png#align=left&amp;display=inline&amp;height=221&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=443&amp;originWidth=376&amp;size=24239&amp;status=done&amp;style=shadow&amp;width=188" alt="image.png"><br>最后的编码结果为：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605341313840-61587c86-135d-4ba0-96aa-844868de1d56.png#align=left&amp;display=inline&amp;height=101&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=201&amp;originWidth=165&amp;size=4405&amp;status=done&amp;style=shadow&amp;width=82.5" alt="image.png"></p>
<h2 id="编码实现"><a href="#编码实现" class="headerlink" title="编码实现"></a>编码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> NS_HuffmanCoding &#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildHuffmanTree</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; chars)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Finalization</span><span class="params">()</span></span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HFMNode</span> &#123;</span></span><br><span class="line">  <span class="keyword">char</span> Ch; <span class="keyword">int</span> Freq;</span><br><span class="line">  HFMNode* Left, * Right;</span><br><span class="line">  HFMNode(<span class="keyword">char</span> pCh, <span class="keyword">int</span> pFreq, HFMNode* pLeft, HFMNode* pRight)</span><br><span class="line">    : Ch(pCh), Freq(pFreq), Left(pLeft), Right(pRight) &#123;&#125;</span><br><span class="line">  HFMNode(<span class="keyword">char</span> pCh, <span class="keyword">int</span> pFreq)</span><br><span class="line">    : HFMNode(pCh, pFreq, <span class="literal">NULL</span>, <span class="literal">NULL</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MinHeapify</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertH</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, HFMNode* node)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SiftDown</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SiftUp</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function">HFMNode* <span class="title">ExtractMin</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteANode</span><span class="params">(HFMNode* node)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowInput</span><span class="params">(<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; chars)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;HFMNode*&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HuffmanCodingCaller</span><span class="params">(<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; chars)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ShowInput(chars);</span><br><span class="line">  Initialization(chars);</span><br><span class="line">  BuildHuffmanTree();</span><br><span class="line">  Output();</span><br><span class="line">  Finalization();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildHuffmanTree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> C = <span class="string">'A'</span>;</span><br><span class="line">  <span class="keyword">while</span> (Q.size() &gt; <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    HFMNode* x = ExtractMin(Q);</span><br><span class="line">    HFMNode* y = ExtractMin(Q);</span><br><span class="line">    HFMNode* z = <span class="keyword">new</span> HFMNode(C++, x-&gt;Freq + y-&gt;Freq, x, y);</span><br><span class="line">    InsertH(Q, z);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">HFMNode* <span class="title">ExtractMin</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  swap(H.front(), H.back());</span><br><span class="line">  HFMNode* p = H.back();</span><br><span class="line">  H.pop_back();</span><br><span class="line">  <span class="keyword">if</span> (!H.empty())</span><br><span class="line">    SiftDown(H, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SiftDown</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ((i = (i &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>) &lt; H.size()) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span> &lt; H.size()) &amp;&amp; (H[i + <span class="number">1</span>]-&gt;Freq &lt; H[i]-&gt;Freq))</span><br><span class="line">            i = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (H[(i - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>]-&gt;Freq &gt; H[i]-&gt;Freq)</span><br><span class="line">            swap(H[(i - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>], H[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertH</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, HFMNode* node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  H.push_back(node);</span><br><span class="line">  SiftUp(H, H.size() - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SiftUp</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (i &gt; <span class="number">0</span> &amp;&amp; H[i]-&gt;Freq &lt; H[(i - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>]-&gt;Freq) &#123;</span><br><span class="line">    swap(H[i], H[(i - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>]);</span><br><span class="line">    i = (i - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MinHeapify</span><span class="params">(<span class="built_in">vector</span>&lt;HFMNode*&gt;&amp; H)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = (H.size() &gt;&gt; <span class="number">1</span>) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    SiftDown(H, i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; chars)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Q.clear();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> ch : chars)</span><br><span class="line">    Q.push_back(<span class="keyword">new</span> HFMNode(ch.first, ch.second));</span><br><span class="line">  MinHeapify(Q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Finalization</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  DeleteANode(Q[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteANode</span><span class="params">(HFMNode* node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (node-&gt;Left)</span><br><span class="line">  &#123;</span><br><span class="line">    DeleteANode(node-&gt;Left);</span><br><span class="line">    DeleteANode(node-&gt;Right);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">delete</span> node;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowInput</span><span class="params">(<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; chars)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Huffman coding input: \n"</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> c : chars)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c,%d; "</span>, c.first, c.second);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; coding;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;&gt; codingList;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetHuffmanCoding</span><span class="params">(HFMNode* node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (node-&gt;Left)</span><br><span class="line">  &#123;</span><br><span class="line">    coding.push_back(<span class="string">'0'</span>);</span><br><span class="line">    GetHuffmanCoding(node-&gt;Left);</span><br><span class="line">    coding.pop_back();</span><br><span class="line">    coding.push_back(<span class="string">'1'</span>);</span><br><span class="line">    GetHuffmanCoding(node-&gt;Right);</span><br><span class="line">    coding.pop_back();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    codingList.push_back(pair&lt;<span class="keyword">char</span>,</span><br><span class="line">      <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt;(node-&gt;Ch, coding));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Huffman coding:\n"</span>);</span><br><span class="line">  coding.clear();</span><br><span class="line">  codingList.clear();</span><br><span class="line">  GetHuffmanCoding(Q[<span class="number">0</span>]);</span><br><span class="line">  sort(codingList.begin(), codingList.end());</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> c1 : codingList)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"  %c: "</span>, c1.first);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c2 : c1.second)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%c"</span>, c2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//namespace NS_HuffmanCoding</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NS_HuffmanCoding;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestHuffmanCoding</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt;&gt; charLists = &#123;</span><br><span class="line">      <span class="comment">//Introduction to Algorithms</span></span><br><span class="line">     &#123;</span><br><span class="line">        &#123; &#123;<span class="string">'a'</span>,<span class="number">40</span>&#125;, &#123;<span class="string">'b'</span>,<span class="number">13</span>&#125;, &#123;<span class="string">'c'</span>,<span class="number">12</span>&#125;,</span><br><span class="line">          &#123;<span class="string">'d'</span>,<span class="number">16</span>&#125;, &#123;<span class="string">'e'</span>,<span class="number">9</span>&#125;, &#123;<span class="string">'f'</span>,<span class="number">5</span>&#125; &#125;,</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="comment">//ÑÏÎµÃô</span></span><br><span class="line">     &#123;</span><br><span class="line">        &#123; &#123;<span class="string">'a'</span>,<span class="number">5</span>&#125;, &#123;<span class="string">'b'</span>,<span class="number">29</span>&#125;, &#123;<span class="string">'c'</span>,<span class="number">7</span>&#125;, &#123;<span class="string">'d'</span>,<span class="number">8</span>&#125;,</span><br><span class="line">          &#123;<span class="string">'e'</span>,<span class="number">14</span>&#125;, &#123;<span class="string">'f'</span>,<span class="number">23</span>&#125;, &#123;<span class="string">'g'</span>,<span class="number">3</span>&#125;, &#123;<span class="string">'h'</span>,<span class="number">11</span>&#125; &#125;,</span><br><span class="line">     &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">int</span> n = charLists.size();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    HuffmanCodingCaller(charLists[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ggu8v9/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[C++匿名函数]]></title>
      <link>https://www.wztlink1013.com/blog/uq89oe/</link>
      <guid>https://www.wztlink1013.com/blog/uq89oe/</guid>
      <pubDate>Sat Nov 14 2020 03:26:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[C++匿名函数]]>
      
      </description>
      <content:encoded><![CDATA[<h3 id="常用形式"><a href="#常用形式" class="headerlink" title="常用形式"></a>常用形式</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">[](<span class="keyword">int</span> x, <span class="keyword">int</span> y) -&gt; <span class="keyword">int</span> &#123; <span class="keyword">int</span> z = x + y; <span class="keyword">return</span> z; &#125; <span class="comment">//这样显示指定返回类型:</span></span><br><span class="line"></span><br><span class="line">[](<span class="keyword">int</span> x, <span class="keyword">int</span> y) &#123; <span class="keyword">return</span> x + y; &#125; <span class="comment">// 隐式返回类型</span></span><br><span class="line">[](<span class="keyword">int</span>&amp; x) &#123; ++x; &#125;   <span class="comment">// 没有return语句 -&gt; lambda 函数的返回类型是'void'</span></span><br><span class="line">[]() &#123; ++global_x; &#125;  <span class="comment">// 没有参数,仅访问某个全局变量</span></span><br><span class="line">[]&#123; ++global_x; &#125;     <span class="comment">// 与上一个相同,省略了()</span></span><br></pre></td></tr></table></figure>
<h3 id="小例子"><a href="#小例子" class="headerlink" title="小例子"></a>小例子</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// lambda表达式</span></span><br><span class="line">    <span class="keyword">auto</span> multiply = [](<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; <span class="keyword">int</span> &#123; <span class="keyword">return</span> a * b; &#125;;</span><br><span class="line">    <span class="comment">// 匿名函数调用</span></span><br><span class="line">    <span class="keyword">auto</span> result = multiply(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; result &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote>
<p>一些进一步用法<a href="https://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html" target="_blank" rel="noopener">https://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html</a></p>
</blockquote>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/uq89oe/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[贪心算法-Kruskal 算法]]></title>
      <link>https://www.wztlink1013.com/blog/ghf568/</link>
      <guid>https://www.wztlink1013.com/blog/ghf568/</guid>
      <pubDate>Sat Nov 14 2020 00:45:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[贪心算法-Kruskal 算法]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h2><p><strong>连通图</strong></p>
<blockquote>
<p>在<a href="https://baike.baidu.com/item/%E5%9B%BE%E8%AE%BA/1433806" target="_blank" rel="noopener">图论</a>中，连通图基于连通的概念。在一个<a href="https://baike.baidu.com/item/%E6%97%A0%E5%90%91%E5%9B%BE/1680427" target="_blank" rel="noopener">无向图</a> G 中，若从<a href="https://baike.baidu.com/item/%E9%A1%B6%E7%82%B9/11030118" target="_blank" rel="noopener">顶点</a>i 到顶点 j 有路径相连（当然从 j 到 i 也一定有路径），则称 i 和 j 是连通的。如果 G 是<a href="https://baike.baidu.com/item/%E6%9C%89%E5%90%91%E5%9B%BE" target="_blank" rel="noopener">有向图</a>，那么连接 i 和 j 的路径中所有的边都必须同向。如果图中任意两点都是连通的，那么图被称作连通图。如果此图是有向图，则称为强连通图（注意：需要双向都有路径）。图的<a href="https://baike.baidu.com/item/%E8%BF%9E%E9%80%9A%E6%80%A7/6688865" target="_blank" rel="noopener">连通性</a>是图的基本性质。</p>
</blockquote>
<p><strong>生成树</strong></p>
<blockquote>
<p>包含图的全部顶点，边数最少的连通子图</p>
</blockquote>
<p><strong>最小生成树</strong></p>
<blockquote>
<p>总权值最小的生成树</p>
</blockquote>
<p>常见问题（该算法）就是求最小生成树。<br><strong>并查集</strong></p>
<blockquote>
<p>是一个数据结构，功能有查找 a 和 b 是否为同一组；将 a 和 b 合并为同一组。</p>
</blockquote>
<h2 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h2><p>把所有边按照权值全部按数值大小拿出来，然后按顺序选取每条边，利用并查集的思想，如果这条边的两个端点不属于同一集合，那么就将它们合并，直到所有的点都属于同一个集合为止。</p>
<p>比如有如下这么一个图：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605320252853-c5d445e4-aa0e-4279-b9fd-7477f23b1bc1.png#align=left&amp;display=inline&amp;height=95&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=189&amp;originWidth=438&amp;size=10882&amp;status=done&amp;style=shadow&amp;width=219" alt="image.png"><br>单独分析 ①② 边和 ③④ 边情况下，两个不在一个集合里面，<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605320331669-51ec03dc-caf6-449d-9e8b-e4e62b9f35a6.png#align=left&amp;display=inline&amp;height=96&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=192&amp;originWidth=769&amp;size=21600&amp;status=done&amp;style=shadow&amp;width=384.5" alt="image.png"><br>不断重复，不断判断是否为同一个集合，不在同一个集合的话，就合并，持续如此。比方说当一直操作到权值为 3 的时候，此时就需要将左右两个集合合并了<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605320497092-00097419-4852-44c4-884e-febd4d37eb65.png#align=left&amp;display=inline&amp;height=101&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=202&amp;originWidth=748&amp;size=22229&amp;status=done&amp;style=shadow&amp;width=374" alt="image.png"><br>最后的结果样式就为如下<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605320612085-d893c759-4ef1-410c-976e-8f32ddfe6321.png#align=left&amp;display=inline&amp;height=146&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=292&amp;originWidth=780&amp;size=31319&amp;status=done&amp;style=shadow&amp;width=390" alt="image.png"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> NS_KruskalMST &#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KruskalMST</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindSet</span><span class="params">(<span class="keyword">int</span> u)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UnionSets</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenEdges</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeSets</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">(<span class="keyword">int</span> v0)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; WMatrix;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;pair&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt;&gt; Edges;</span><br><span class="line"><span class="comment">//Node struct for the disjoint set</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DJSNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> Parent; <span class="keyword">int</span> Rank;</span><br><span class="line">    DJSNode(<span class="keyword">int</span> p) : Parent(p), Rank(<span class="number">0</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;DJSNode&gt; DisjointSet;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; MST;</span><br><span class="line"><span class="comment">//The adjacency list for MST</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; MSTList;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Prev;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KruskalMSTCaller</span><span class="params">(<span class="keyword">int</span> an,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp;wMatrix, <span class="keyword">int</span> v0)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = an;</span><br><span class="line">    WMatrix = wMatrix;</span><br><span class="line">    Initialization();</span><br><span class="line">    KruskalMST();</span><br><span class="line">    Output(v0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KruskalMST</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;e: Edges)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = e.first.first;</span><br><span class="line">        <span class="keyword">int</span> v = e.first.second;</span><br><span class="line">        <span class="keyword">int</span> setU = FindSet(u);</span><br><span class="line">        <span class="keyword">int</span> setV = FindSet(v);</span><br><span class="line">        <span class="keyword">if</span> (setU != setV)</span><br><span class="line">        &#123;</span><br><span class="line">            MST.push_back(e.first);</span><br><span class="line">            <span class="keyword">if</span> (MST.size() == n - <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            UnionSets(setU, setV);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindSet</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (u != DisjointSet[u].Parent)</span><br><span class="line">        u = DisjointSet[u].Parent;</span><br><span class="line">        <span class="comment">//For path compression:</span></span><br><span class="line">        <span class="comment">//DisjointSet[u].Parent =</span></span><br><span class="line">        <span class="comment">//    FindSet(DisjointSet[u].Parent);</span></span><br><span class="line">    <span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UnionSets</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (DisjointSet[u].Rank &gt;= DisjointSet[v].Rank)</span><br><span class="line">        DisjointSet[v].Parent = u;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        DisjointSet[u].Parent = v;</span><br><span class="line">    <span class="keyword">if</span> (DisjointSet[u].Rank == DisjointSet[v].Rank)</span><br><span class="line">        DisjointSet[u].Rank++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GenEdges();</span><br><span class="line">    sort(Edges.begin(), Edges.end(),</span><br><span class="line">        [](pair&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt;a,</span><br><span class="line">            pair&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt;b)</span><br><span class="line">        &#123;<span class="keyword">return</span> a.second &lt; b.second; &#125;);</span><br><span class="line">    MakeSets();</span><br><span class="line">    MST.clear();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenEdges</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Edges.clear();</span><br><span class="line">    <span class="comment">//Traverse the upper triangle of WMatrix</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (WMatrix[i][j] != INF)</span><br><span class="line">                Edges.push_back(&#123; &#123;i, j&#125;,</span><br><span class="line">                    WMatrix[i][j] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeSets</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DisjointSet.clear();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        DisjointSet.push_back(DJSNode(i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputWMatrix</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"n = %d\n"</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The weight matrix:\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%3c"</span>, <span class="string">' '</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%3d"</span>, j + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%3d"</span>, i + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> j : WMatrix[i])</span><br><span class="line">            <span class="keyword">if</span> (j &lt; INF)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%3d"</span>, j);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%3c"</span>, <span class="string">'*'</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputPath</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Prev[u] == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, u + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        OutputPath(Prev[u]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-%d"</span>, u + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenMSTList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MSTList.clear();</span><br><span class="line">    MSTList.resize(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;e: MST)</span><br><span class="line">    &#123;</span><br><span class="line">        MSTList[e.first].push_back(e.second);</span><br><span class="line">        MSTList[e.second].push_back(e.first);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenPrev</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;u : MSTList[v])</span><br><span class="line">        <span class="keyword">if</span> (u != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Prev[u] = v;</span><br><span class="line">            <span class="keyword">auto</span> w = find(MSTList[u].begin(),</span><br><span class="line">                MSTList[u].end(), v);</span><br><span class="line">            MSTList[u][w - MSTList[u].begin()] = <span class="number">-1</span>;</span><br><span class="line">            GenPrev(u);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">(<span class="keyword">int</span> v0)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Kruskal's MST algorithm\n"</span>);</span><br><span class="line">    OutputWMatrix();</span><br><span class="line">    <span class="keyword">int</span> wSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">        wSum += WMatrix[MST[i].first][MST[i].second];</span><br><span class="line">    GenMSTList();</span><br><span class="line">    Prev.clear();</span><br><span class="line">    Prev.resize(n);</span><br><span class="line">    Prev[v0] = <span class="number">-1</span>;</span><br><span class="line">    GenPrev(v0);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The MST edges:\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Edge Weight\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;e : MST)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %d-%d  %d\n"</span>, e.first + <span class="number">1</span>, e.second + <span class="number">1</span>,</span><br><span class="line">            WMatrix[e.first][e.second]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Total MST weight: %d\n"</span>, wSum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The MST paths from vertex %d:\n"</span>, v0 + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u = <span class="number">0</span>; u &lt; n; u++)</span><br><span class="line">        <span class="keyword">if</span> (u != v0)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%3d: "</span>, u + <span class="number">1</span>);</span><br><span class="line">            OutputPath(u);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//namespace NS_KruskalMST</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NS_KruskalMST;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestKruskalMST</span><span class="params">(<span class="keyword">int</span> v0 = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&gt; w = &#123;</span><br><span class="line">        <span class="comment">//https://www.geeksforgeeks.org/</span></span><br><span class="line">        <span class="comment">//prims-minimum-spanning-tree-mst-greedy-algo-5/</span></span><br><span class="line">        &#123;</span><br><span class="line">            &#123;   <span class="number">0</span>,  <span class="number">2</span>,INF,  <span class="number">6</span>,INF &#125;,</span><br><span class="line">            &#123;   <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">8</span>,  <span class="number">5</span> &#125;,</span><br><span class="line">            &#123; INF,  <span class="number">3</span>,  <span class="number">0</span>,INF,  <span class="number">7</span> &#125;,</span><br><span class="line">            &#123;   <span class="number">6</span>,  <span class="number">8</span>,INF,  <span class="number">0</span>,  <span class="number">9</span> &#125;,</span><br><span class="line">            &#123; INF,  <span class="number">5</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">0</span> &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// Dijkstra's algorithm on Wikipedia</span></span><br><span class="line">        &#123;</span><br><span class="line">            &#123;   <span class="number">0</span>,  <span class="number">7</span>,  <span class="number">9</span>,INF,INF, <span class="number">14</span> &#125;,</span><br><span class="line">            &#123;   <span class="number">7</span>,  <span class="number">0</span>, <span class="number">10</span>, <span class="number">15</span>,INF,INF &#125;,</span><br><span class="line">            &#123;   <span class="number">9</span>, <span class="number">10</span>,  <span class="number">0</span>, <span class="number">11</span>,INF,  <span class="number">2</span> &#125;,</span><br><span class="line">            &#123; INF, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">0</span>,  <span class="number">6</span>,INF &#125;,</span><br><span class="line">            &#123; INF,INF,INF,  <span class="number">6</span>,  <span class="number">0</span>,  <span class="number">9</span> &#125;,</span><br><span class="line">            &#123;  <span class="number">14</span>,INF,  <span class="number">2</span>,INF,  <span class="number">9</span>,  <span class="number">0</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//https://www.geeksforgeeks.org/</span></span><br><span class="line">        <span class="comment">//kruskals-minimum-spanning-tree-using-stl-in-c/</span></span><br><span class="line">        &#123;</span><br><span class="line">            &#123;   <span class="number">0</span>,  <span class="number">4</span>,INF,INF,INF,INF,INF,  <span class="number">8</span>,INF &#125;,</span><br><span class="line">            &#123;   <span class="number">4</span>,  <span class="number">0</span>,  <span class="number">8</span>,INF,INF,INF,INF, <span class="number">11</span>,INF &#125;,</span><br><span class="line">            &#123; INF,  <span class="number">8</span>,  <span class="number">0</span>,  <span class="number">7</span>,INF,  <span class="number">4</span>,INF,INF,  <span class="number">2</span> &#125;,</span><br><span class="line">            &#123; INF,INF,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">14</span>,INF,INF,INF &#125;,</span><br><span class="line">            &#123; INF,INF,INF,  <span class="number">9</span>,  <span class="number">0</span>, <span class="number">10</span>,INF,INF,INF &#125;,</span><br><span class="line">            &#123; INF,INF,  <span class="number">4</span>, <span class="number">14</span>, <span class="number">10</span>,  <span class="number">0</span>,  <span class="number">2</span>,INF,INF &#125;,</span><br><span class="line">            &#123; INF,INF,INF,INF,INF,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">6</span> &#125;,</span><br><span class="line">            &#123;   <span class="number">8</span>, <span class="number">11</span>,INF,INF,INF,INF,  <span class="number">1</span>,  <span class="number">0</span>,  <span class="number">7</span> &#125;,</span><br><span class="line">            &#123; INF,INF,  <span class="number">2</span>,INF,INF,INF,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">0</span> &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">int</span> k = w.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (v0 &gt; w[i].size() - <span class="number">1</span>)</span><br><span class="line">        v0 = w[i].size() - <span class="number">1</span>;</span><br><span class="line">      KruskalMSTCaller(w[i].size(), w[i], v0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ghf568/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[api学习笔记]]></title>
      <link>https://www.wztlink1013.com/blog/frhg9i/</link>
      <guid>https://www.wztlink1013.com/blog/frhg9i/</guid>
      <pubDate>Fri Nov 13 2020 01:34:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[api学习笔记]]>
      
      </description>
      <content:encoded><![CDATA[<h3 id="uniapp-官方里面的-API-相关信息"><a href="#uniapp-官方里面的-API-相关信息" class="headerlink" title="uniapp 官方里面的 API 相关信息"></a>uniapp 官方里面的 API 相关信息</h3><blockquote>
<p>列表的详情接口</p>
</blockquote>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul>
<li>api<ul>
<li><a href="https://unidemo.dcloud.net.cn/api/news" target="_blank" rel="noopener">https://unidemo.dcloud.net.cn/api/news</a></li>
</ul>
</li>
<li>返回数据格式<ul>
<li>post_id 新闻 id 如 ： 72980</li>
<li>title 标题</li>
<li>created_at 创建时间</li>
<li>author_avatar 图标</li>
</ul>
</li>
</ul>
<h4 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h4><ul>
<li><p><strong>地址</strong></p>
<blockquote>
<p><a href="https://unidemo.dcloud.net.cn/api/news/36kr/" target="_blank" rel="noopener">https://unidemo.dcloud.net.cn/api/news/36kr/</a> + id（id 为新闻 id，上个页面传过来的）</p>
</blockquote>
</li>
<li><p><strong>使用 rich-text 【富文本组件】来展示新闻内容</strong></p>
</li>
</ul>
<p><code>&lt;rich-text class=&quot;richText&quot; :nodes=&quot;strings&quot;&gt;&lt;/rich-text&gt;</code></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://blog.csdn.net/m15801872696/article/details/90141941?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.pc_relevant_is_cache&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.pc_relevant_is_cache" target="_blank" rel="noopener">简单 api 的使用教程</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener">阮一峰-RESTful API 设计指南</a></li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/frhg9i/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[搭建Windows子系统Linux]]></title>
      <link>https://www.wztlink1013.com/blog/xnh83z/</link>
      <guid>https://www.wztlink1013.com/blog/xnh83z/</guid>
      <pubDate>Mon Nov 09 2020 09:39:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[搭建Windows子系统Linux]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="Windows-子系统-Linux"><a href="#Windows-子系统-Linux" class="headerlink" title="Windows 子系统 Linux"></a>Windows 子系统 Linux</h2><h3 id="子系统-Linux-下载安装"><a href="#子系统-Linux-下载安装" class="headerlink" title="子系统 Linux 下载安装"></a>子系统 Linux 下载安装</h3><p>在 windows 里面搜索 <code>windows功能</code><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604913834448-30d164c9-e0a6-47f8-baac-03c5d6648186.png#align=left&amp;display=inline&amp;height=517&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1033&amp;originWidth=1176&amp;size=659449&amp;status=done&amp;style=shadow&amp;width=588" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604913865729-b20b3a35-ab49-48c9-be97-9f3c56d6d7a6.png#align=left&amp;display=inline&amp;height=295&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=590&amp;originWidth=623&amp;size=61833&amp;status=done&amp;style=shadow&amp;width=311.5" alt="image.png"><br>然后已知下一步操作即可，该过程中会有重启的过程。<br>之后重启之后在应用商店下载 Ubuntu 系统，如下。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604913776014-38c5ce17-996d-4827-8c49-bb047b2f7d3c.png#align=left&amp;display=inline&amp;height=339&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=948&amp;originWidth=1200&amp;size=183352&amp;status=done&amp;style=shadow&amp;width=429" alt="image.png"><br>然后启动的时候，会有让自己输入用户名和密码的情况。输入确认就好了（<strong>输入密码的时候，终端内不会显示光标以及输入的字符！但是会有密码验证</strong>）</p>
<h3 id="子系统-Linux-文件目录"><a href="#子系统-Linux-文件目录" class="headerlink" title="子系统 Linux 文件目录"></a>子系统 Linux 文件目录</h3><p><code>C:\Users\wztli\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\home\wztlink1013</code><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604914117863-4fc253c2-1978-44b1-94c6-48e82a3ddf3a.png#align=left&amp;display=inline&amp;height=111&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=221&amp;originWidth=1468&amp;size=28524&amp;status=done&amp;style=shadow&amp;width=734" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604914176405-056c5008-8168-40f8-a599-0e7951cad309.png#align=left&amp;display=inline&amp;height=293&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=585&amp;originWidth=1406&amp;size=115194&amp;status=done&amp;style=shadow&amp;width=703" alt="image.png"></p>
<h3 id="Linux-访问-Windows-文件"><a href="#Linux-访问-Windows-文件" class="headerlink" title="Linux 访问 Windows 文件"></a>Linux 访问 Windows 文件</h3><p>如下图中 1 所示，访问时，需要先将 Windows 磁盘挂载到/mnt 下面，然后就可以访问了。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604914600884-f758bc8f-668d-4354-be9f-f9be774cfff1.png#align=left&amp;display=inline&amp;height=189&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=378&amp;originWidth=1122&amp;size=63616&amp;status=done&amp;style=shadow&amp;width=561" alt="image.png"></p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/xnh83z/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[uni-app简单api调用]]></title>
      <link>https://www.wztlink1013.com/blog/ytoag7/</link>
      <guid>https://www.wztlink1013.com/blog/ytoag7/</guid>
      <pubDate>Fri Nov 06 2020 09:23:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[uni-app简单api调用【部分内容转载】]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="uni-app-相对传统的变化"><a href="#uni-app-相对传统的变化" class="headerlink" title="uni-app 相对传统的变化"></a>uni-app 相对传统的变化</h2><h3 id="网络模型的变化"><a href="#网络模型的变化" class="headerlink" title="网络模型的变化"></a>网络模型的变化</h3><p>之前学习的<code>javaweb</code>形式的是“相互嵌套”类型的，<code>jsp</code>代码里面可以有<code>html</code>代码。</p>
<p>以前网页大多是 b/s，服务端代码混合在页面里；<br>现在是 c/s，前后端分离，通过 js api(类似 ajax 的<code>uni.request</code>)获取 json 数据，把数据绑定在界面上渲染。</p>
<h3 id="文件类型变化"><a href="#文件类型变化" class="headerlink" title="文件类型变化"></a>文件类型变化</h3><p>.vue 文件通过编译，编译 js 文件</p>
<h3 id="代码架构大变动"><a href="#代码架构大变动" class="headerlink" title="代码架构大变动"></a>代码架构大变动</h3><p>以前的 HTML 代码节点，有 html 大节点，还有 script 和 style 两个小结点</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>现在 template 是一级节点，用于写<strong>tag 组件</strong>，script 和 style 是并列的一级节点，也就是有 3 个一级节点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view&gt;</span><br><span class="line">    注意必须有一个view，且只能有一个根view。所有内容写在这个view下面。</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener">Vue 单文件组件</a></li>
</ul>
<p>###</p>
<h3 id="组件-标签的变化"><a href="#组件-标签的变化" class="headerlink" title="组件/标签的变化"></a>组件/标签的变化</h3><p>下为 html 标签和 uni-app 内置组件的映射表：<br>（其实老的 HTML 标签也可以在 uni-app 里使用，uni-app 编译器会在编译时把老标签转为新标签，比如把 div 编译成 view。但不推荐这种用法，调试 H5 端时容易混乱。）</p>
<ul>
<li>div 改成 <a href="https://uniapp.dcloud.io/component/view" target="_blank" rel="noopener">view</a></li>
<li>span、font 改成 <a href="https://uniapp.dcloud.io/component/text" target="_blank" rel="noopener">text</a></li>
<li>a 改成 <a href="https://uniapp.dcloud.io/component/navigator" target="_blank" rel="noopener">navigator</a></li>
<li>img 改成 <a href="https://uniapp.dcloud.io/component/image" target="_blank" rel="noopener">image</a></li>
<li><a href="https://uniapp.dcloud.io/component/input" target="_blank" rel="noopener">input</a> 还在，但 type 属性改成了 confirmtype</li>
<li><a href="https://uniapp.dcloud.io/component/form" target="_blank" rel="noopener">form</a>、<a href="https://uniapp.dcloud.io/component/button" target="_blank" rel="noopener">button</a>、<a href="https://uniapp.dcloud.io/component/checkbox" target="_blank" rel="noopener">checkbox</a>、<a href="https://uniapp.dcloud.io/component/radio" target="_blank" rel="noopener">radio</a>、<a href="https://uniapp.dcloud.io/component/label" target="_blank" rel="noopener">label</a>、<a href="https://uniapp.dcloud.io/component/textarea" target="_blank" rel="noopener">textarea</a>、<a href="https://uniapp.dcloud.io/component/canvas" target="_blank" rel="noopener">canvas</a>、<a href="https://uniapp.dcloud.io/component/video" target="_blank" rel="noopener">video</a> 这些还在。</li>
<li>select 改成 <a href="https://uniapp.dcloud.io/component/picker" target="_blank" rel="noopener">picker</a></li>
<li>iframe 改成 <a href="https://uniapp.dcloud.io/component/web-view" target="_blank" rel="noopener">web-view</a></li>
<li>ul、li 没有了，都用 view 替代</li>
<li>audio 不再推荐使用，改成 api 方式，<a href="https://uniapp.dcloud.io/api/media/background-audio-manager?id=getbackgroundaudiomanager" target="_blank" rel="noopener">背景音频 api 文档</a></li>
</ul>
<p><strong>除了改动外，新增了一批手机端常用的新组件</strong><br>**</p>
<ul>
<li>scroll-view <a href="https://uniapp.dcloud.io/component/scroll-view" target="_blank" rel="noopener">可区域滚动视图容器</a></li>
<li>swiper <a href="https://uniapp.dcloud.io/component/swiper" target="_blank" rel="noopener">可滑动区域视图容器</a></li>
<li>icon <a href="https://uniapp.dcloud.io/component/icon" target="_blank" rel="noopener">图标</a></li>
<li>rich-text <a href="https://uniapp.dcloud.io/component/rich-text" target="_blank" rel="noopener">富文本（不可执行 js，但可渲染各种文字格式和图片）</a></li>
<li>progress <a href="https://uniapp.dcloud.io/component/progress" target="_blank" rel="noopener">进度条</a></li>
<li>slider <a href="https://uniapp.dcloud.io/component/slider" target="_blank" rel="noopener">滑块指示器</a></li>
<li>switch <a href="https://uniapp.dcloud.io/component/switch" target="_blank" rel="noopener">开关选择器</a></li>
<li>camera <a href="https://uniapp.dcloud.io/component/camera" target="_blank" rel="noopener">相机</a></li>
<li>live-player <a href="https://uniapp.dcloud.io/component/live-player" target="_blank" rel="noopener">直播</a></li>
<li>map <a href="https://uniapp.dcloud.io/component/map" target="_blank" rel="noopener">地图</a></li>
<li>cover-view <a href="https://uniapp.dcloud.io/component/cover-view?id=cover-view" target="_blank" rel="noopener">可覆盖原生组件的视图容器</a><br>cover-view 需要多强调几句，uni-app 的非 h5 端的 video、map、canvas、textarea 是原生组件，层级高于其他组件。如需覆盖原生组件，则需要使用 cover-view 组件。详见<a href="https://uniapp.dcloud.net.cn/component/native-component" target="_blank" rel="noopener">层级介绍</a></li>
</ul>
<p>除了内置组件，还有很多开源的扩展组件，把常用操作都进行封装，DCloud 建立了插件市场收录这些扩展组件，详见<a href="https://ext.dcloud.net.cn/" target="_blank" rel="noopener">插件市场</a></p>
<p>**</p>
<h3 id="工程结构和页面管理"><a href="#工程结构和页面管理" class="headerlink" title="工程结构和页面管理"></a>工程结构和页面管理</h3><p>uni-app 的工程结构有单独的要求，<a href="https://uniapp.dcloud.io/frame?id=%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84" target="_blank" rel="noopener">详见</a></p>
<p>每个可显示的页面，都必须在 <a href="https://uniapp.dcloud.io/collocation/pages" target="_blank" rel="noopener">pages.json</a> 中注册。如果你开发过小程序，那么 pages.json 类似 app.json。如果你熟悉 vue，这里没有 vue 的路由，都是在 pages.json 里管理。</p>
<p>原来工程的首页一般是 index.html 或 default.html，是在 web server 里配的。而 uni-app 的首页，是在 pages.json 里配的，page 节点下第一个页面就是首页。一般在/pages/xx 的目录下。</p>
<p>app 和小程序中，为了提升体验，页面提供了原生的导航栏和底部 tabbar，注意这些配置是在 pages.json 中做，而不是在 vue 页面里创建，但点击事件的监听在显示的 vue 页面中做。</p>
<p>如果你熟悉小程序开发的话，对比变化如下：</p>
<ul>
<li>原来 app.json 被一拆为二。页面管理，被挪入了 uni-app 的 pages.json；非页面管理，挪入了 manifest.json</li>
<li>原来的 app.js 和 app.wxss 被合并到了 app.vue 中</li>
</ul>
<h2 id="文件导入方式变化"><a href="#文件导入方式变化" class="headerlink" title="文件导入方式变化"></a>文件导入方式变化</h2><h3 id="js-引入方式"><a href="#js-引入方式" class="headerlink" title="js 引入方式"></a>js 引入方式</h3><p>以前通过<code>script `</code>src <code>、</code> link <code></code>href <code>引入外部的 js 和 css；
现在是**es6**的写法，</code>import`引入外部的 js 模块(注意不是文件)或 css<br>以前</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/jquery-1.10.2.js"</span> type=<span class="string">"text/javascript"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;link href="css/</span>bootstrap.css<span class="string">" rel="</span>stylesheet<span class="string">" type="</span>text/css<span class="string">"/&gt;</span></span><br></pre></td></tr></table></figure>
<p>现在</p>
<blockquote>
<p>js 要 require 进来，变成了对象。</p>
</blockquote>
<p>在 hello uni-app 项目的 common 目录有一个工具类<code>util.js</code>，可以在 hello uni-app 中搜索这个例子查看。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">'../../../common/util.js'</span>); <span class="comment">//require这个js模块 var</span></span><br><span class="line">  formatedPlayTime = util.formatTime(playTime); <span class="comment">//调用js模块的方法</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<p>而在这个<code>util.js</code>里，要把之前的 function 封装为对象的方法<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1604048264989-b4591bb0-e4bc-4581-aae5-bf7615f268b4.png#align=left&amp;display=inline&amp;height=231&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=606&amp;originWidth=1331&amp;size=70716&amp;status=done&amp;style=shadow&amp;width=508" alt="image.png"><br>当然还有一些高级的用法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dateUtils = <span class="built_in">require</span>(<span class="string">"../../../common/util.js"</span>).dateUtils; <span class="comment">//直接使用js模块的属性。在hello uni-app有示例</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">"/components/echarts/echarts.simple.min.js"</span>; <span class="comment">//将js导入并重命名为echarts，然后使用echarts.来继续执行方法。</span></span><br></pre></td></tr></table></figure>
<h3 id="CSS-引入方式"><a href="#CSS-引入方式" class="headerlink" title="CSS 引入方式"></a>CSS 引入方式</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="keyword">@import</span> <span class="string">"./common/uni.css"</span>;</span><br><span class="line">    <span class="selector-class">.uni-hello-text</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#7A7E83</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p><strong>改全局样式：</strong>在根目录下的 app.vue 里写入，每个页面都会加载 app.vue 里的样式。</p>
<h3 id="组件导入"><a href="#组件导入" class="headerlink" title="组件导入"></a>组件导入</h3><p>类似 hexo 博客主题设计一样，能以组件的形式模块化导入。<br>如下是导入一个角标的组件库，在页面上显示一个 abc 并且右上角有个数字角标 1，<a href="http://ext.dcloud.net.cn/plugin?id=21" target="_blank" rel="noopener">详见</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view&gt;</span><br><span class="line">    &lt;uni-badge text=&quot;abc&quot; :inverted=&quot;true&quot;&gt;&lt;/uni-badge</span><br><span class="line">    &gt;&lt;!--3.使用组件--&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import uniBadge from &quot;../../../components/uni-badge.vue&quot;; //1.导入组件（这步属于传统vue规范，但在uni-app的easycom下可以省略这步）</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    uniBadge, //2.注册组件（这步属于传统vue规范，但在uni-app的easycom下可以省略这步）</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>如需要全局导入 vue 组件，即每个页面都可以直接使用而不用引用和注册的话，在项目根目录下的 main.js 里处理。如下是 hello uni-app 里的例子。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> pageHead <span class="keyword">from</span> <span class="string">"./components/page-head.vue"</span>; <span class="comment">//导入</span></span><br><span class="line">Vue.component(<span class="string">"page-head"</span>, pageHead); <span class="comment">//注册。注册后在每个vue的page页面里可以直接使用&lt;page-head&gt;&lt;/page-head&gt;组件。</span></span><br></pre></td></tr></table></figure>
<p>上述的组件使用方式属于传统 vue 的概念。uni-app 2.7 以后推出了更简单的组件使用技术<a href="https://uniapp.dcloud.net.cn/collocation/pages?id=easycom" target="_blank" rel="noopener">easycom</a>，无需引用和注册组件，直接在 template 区域使用组件即可。</p>
<h2 id="js-的变化"><a href="#js-的变化" class="headerlink" title="js 的变化"></a>js 的变化</h2><p>js 的变化，分为<strong>运行环境变化</strong>、<strong>数据绑定模式变化</strong>、<strong>api 变化</strong>3 部分。</p>
<h3 id="运行环境从浏览器变成-v8-引擎"><a href="#运行环境从浏览器变成-v8-引擎" class="headerlink" title="运行环境从浏览器变成 v8 引擎"></a>运行环境从浏览器变成 v8 引擎</h3><p>标准 js 语法和 api 都支持，比如 if、for、settimeout、indexOf 等。</p>
<p>但<strong>浏览器专用的</strong>window、document、navigator、location 对象，包括 cookie 等存储，<strong>只有在浏览器中才有</strong>，app 和小程序都不支持。</p>
<blockquote>
<p>可能有些人以为 js 等于浏览器里的 js。其实 js 是 ECMAScript 组织管理的，浏览器中的 js 是 w3c 组织基于 js 规范补充了 window、document、navigator、location 等专用对象。</p>
</blockquote>
<p>在 uni-app 的各个端中，除了 h5 端，其他端的 js 都运行在一个独立的 v8 引擎下，不是在浏览器中，所以浏览器的对象无法使用。如果你做过小程序开发，对此应当很了解。<br><strong>这意味着依赖 document 的很多 HTML 的库，比如 jqurey 无法使用。</strong><br>当然 app 和小程序支持 web-view 组件，里面可以加载标准 HTML，这种页面仍然支持浏览器专用对象 window、document、navigator、location。</p>
<h3 id="以前的-dom-操作，改成-vue-的-MVVM-模式"><a href="#以前的-dom-操作，改成-vue-的-MVVM-模式" class="headerlink" title="以前的 dom 操作，改成 vue 的 MVVM 模式"></a>以前的 dom 操作，改成 vue 的 MVVM 模式</h3><p>现在前端趋势是去 dom 化，改用<strong>mvvm 模式，</strong>更简洁的写法，大幅减少代码行数，同时差量渲染性能更好。<br>uni-app 使用 vue 的数据绑定方式解决 js 和 dom 界面交互的问题。<br>如果你想改变某个 dom 元素的显示内容，比如一个 view 的显示文字：<br><strong>以前</strong>是给 view 设 id，然后 js 里通过选择器获取 dom 元素，进一步通过 js 进行赋值操作，修改 dom 元素的属性或值。<br>如下演示了一段代码，页面中有个显示的文字区和一个按钮，点击按钮后会修改文字区的值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"spana"</span>).innerText = <span class="string">"456"</span>;</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">changetextvalue</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"spana"</span>).innerText = <span class="string">"789"</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"spana"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"changetextvalue()"</span>&gt;</span>修改为789<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>现在的做法，是<strong>vue 的绑定模式</strong>，给这个<strong>dom 元素绑定一个 js 变量</strong>，在 script 中修改 js 变量的值，dom 会自动变化，页面会自动更新渲染</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view&gt;</span><br><span class="line">    &lt;text&gt;&#123;&#123; textvalue &#125;&#125;&lt;/text</span><br><span class="line">    &gt;&lt;!-- 这里演示了组件值的绑定 --&gt;</span><br><span class="line">    &lt;button :type=&quot;buttontype&quot; @click=&quot;changetextvalue()&quot;&gt;修改为789&lt;/button</span><br><span class="line">    &gt;&lt;!-- 这里演示了属性和事件的绑定 --&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      textvalue: &quot;123&quot;,</span><br><span class="line">      buttontype: &quot;primary&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad() &#123;</span><br><span class="line">    this.textvalue = &quot;456&quot;; //这里修改textvalue的值，其实123都来不及显示就变成了456</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changetextvalue() &#123;</span><br><span class="line">      this.textvalue = &quot;789&quot;; //这里修改textvalue的值，页面自动刷新为789</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>注意上述代码中的 <code>export default {}</code> 里的 <code>data(): {return { }}</code>。<br>在 vue 的设计中，这里存放着页面中需要绑定的数据，写在 data 里，才能被界面正确的绑定和渲染。<br>注意：uni-app 的 vue 页面是 vue 的单文件组件规范，按照 vue 的定义只接受 function，必须用 return 包起来。<br>如果你学过小程序的数据绑定，但不了解 vue，要注意：</p>
<ul>
<li>小程序的数据绑定参考了 vue，但自己修改了一些。在 uni-app 中只支持标准的 vue，不支持小程序的数据绑定语法</li>
<li>小程序里的 setData 在 uni-app 里并不存在，因为 vue 是自动双向数据绑定的。直接通过赋值方式修改数据，如果数据绑定到界面上，界面会自动更新渲染</li>
</ul>
<p>从上述示例，还可看出事件的写法变化。</p>
<ul>
<li>以前，元素的事件是用 onxxx=””，里面写一段 js 或引用 function 的 name，比如上述代码中的<code>onclick=&quot;changetextvalue()&quot;</code></li>
<li>现在，需要在 js 的<code>export default {}</code> 里的 <code>methods: {}</code> 里写一个方法，然后在组件中使用<code>@click=&quot;changetextvalue()&quot;</code></li>
</ul>
<p>在 js 中，与 data 和 methods 平级的，如上述示例代码中的<code>onload()</code>，称为生命周期。在普通 vue 页面里的生命周期叫页面生命周期。在项目根目录的 app.vue 文件中的生命周期叫应用生命周期。<br>除了<code>onload</code>，还有<code>onready</code>等很多生命周期，具体见<a href="https://uniapp.dcloud.io/collocation/frame/lifecycle" target="_blank" rel="noopener">uni-app 的生命周期</a><br>在高级用法里，<strong>vue 支持给组件设 ref（引用标记）</strong>，这类似于之前 html 中给一个 dom 元素设 id，然后在 js 中也可以用<code>this.$refs.xxx</code>来获取。如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view&gt;</span><br><span class="line">    &lt;view ref=&quot;testview&quot;&gt;11111&lt;/view&gt;</span><br><span class="line">    &lt;button @click=&quot;getTest&quot;&gt;获取test节点&lt;/button&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getTest() &#123;</span><br><span class="line">      console.log(this.$refs.testview);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="js-api-的变化"><a href="#js-api-的变化" class="headerlink" title="js api 的变化"></a>js api 的变化</h3><p>因为 uni-app 的 api 是<strong>参考小程序</strong>的，所以<strong>和浏览器的 js api</strong>有很多不同，如</p>
<ol>
<li>alert,confirm 改成 <a href="https://uniapp.dcloud.io/api/ui/prompt?id=showmodal" target="_blank" rel="noopener">uni.showmodel</a></li>
<li>ajax 改成 <a href="https://uniapp.dcloud.io/api/request/request" target="_blank" rel="noopener">uni.request</a></li>
<li>cookie、session 没有了，local.storage 改成 <a href="https://uniapp.dcloud.io/api/storage/storage?id=setstorage" target="_blank" rel="noopener">uni.storage</a></li>
</ol>
<p>uni-app 的 js api 还有很多，但基本就是小程序的 api，把 wx.xxx 改为 uni.xxx 即可。<a href="https://uniapp.dcloud.io/api/README" target="_blank" rel="noopener">详见</a><br>uni-app 在不同的端，支持条件编译，无限制的使用各端独有的 api，<a href="https://uniapp.dcloud.io/platform" target="_blank" rel="noopener">详见条件编译</a></p>
<h2 id="css-的变化"><a href="#css-的变化" class="headerlink" title="css 的变化"></a>css 的变化</h2><p><strong>标准的 css 基本都是支持的。</strong></p>
<h3 id="选择器方面"><a href="#选择器方面" class="headerlink" title="选择器方面"></a>选择器方面</h3><blockquote>
<p>有 2 个变化：</p>
</blockquote>
<ol>
<li>*选择器不支持；</li>
<li>元素选择器里没有 body，改为了 page。微信小程序即是如此。</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">page</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>单位方面：</strong>px 无法动态适应不同宽度的屏幕，rem 无法用于 nvue/weex。如果想使用根据屏幕宽度自适应的单位，推荐使用 rpx，全端支持。 <a href="https://uniapp.dcloud.io/frame?id=%e5%b0%ba%e5%af%b8%e5%8d%95%e4%bd%8d" target="_blank" rel="noopener">尺寸单位文档</a></li>
<li><strong>布局方面：</strong>uni-app 推荐使用 flex 布局，这个布局思路和传统流式布局有点区别。但 flex 的特色在于，不管是什么技术都支持这种排版，web、小程序/快应用、weex/rn、原生的 iOS、Android 开发，全都支持 flex。它是通吃所有端的新一代布局方案。相关教程请自行百度学习。</li>
</ul>
<h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><p>uni-app 的 vue 文件里支持所有 web 排版方式，不管是流式还是 flex。但 nvue 里，只支持 flex，因为它在 app 端是使用原生排版引擎渲染的。<br><strong>注意 css 里背景图和字体文件，尽量不要大于 40k，因为会影响性能。在小程序端，如果要大于 40k，需放到服务器侧远程引用或 base64 后引入，不能放到本地作为独立文件引用。</strong></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>官方教程：<a href="https://ke.qq.com/course/343370" target="_blank" rel="noopener">uni-app 跨平台框架官方教程</a></li>
<li><a href="https://ask.dcloud.net.cn/article/35657" target="_blank" rel="noopener">白话 uni-app 【也是 html、vue、小程序的区别】</a>(全文参考该文章的内容+自己的一些笔记)</li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ytoag7/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Android平台与开发技术]]></title>
      <link>https://www.wztlink1013.com/blog/im0an1/</link>
      <guid>https://www.wztlink1013.com/blog/im0an1/</guid>
      <pubDate>Tue Nov 03 2020 08:23:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[Android平台与开发技术]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="一、目的"><a href="#一、目的" class="headerlink" title="一、目的"></a>一、目的</h2><p>大学期间，有没有能够<strong>有专业能力的项目实战</strong>。希望在你的将来的简历中加入技术方面的项目介绍。</p>
<h2 id="二、考核方式"><a href="#二、考核方式" class="headerlink" title="二、考核方式"></a>二、考核方式</h2><p>PBL 的方式组队，开发一个创意项目。**</p>
<h2 id="三、课程背景"><a href="#三、课程背景" class="headerlink" title="三、课程背景"></a>三、课程背景</h2><ol>
<li><strong>Android 平台简介</strong></li>
<li><strong>Google  提供了官方的 Android Studio</strong><ol>
<li>Java  或者  Kotlin</li>
</ol>
</li>
<li><strong>Apple 提供了官方的开发环境</strong><ol>
<li>Swift 或者 OC</li>
</ol>
</li>
<li><strong>Wechat 提供了官方的开发环境</strong><ol>
<li>SNS  排第一的产品；Facebook</li>
<li>小程序，JD</li>
</ol>
</li>
<li><strong>其他平台</strong><ol>
<li>百度小程序等**</li>
</ol>
</li>
</ol>
<h2 id="四、技术路线"><a href="#四、技术路线" class="headerlink" title="四、技术路线"></a>四、技术路线</h2><ol>
<li><strong>uni-app</strong>  是一个使用 <a href="https://vuejs.org/" target="_blank" rel="noopener">Vue.js</a> 开发所有前端应用的<strong>框架</strong>，开发者编写一套代码，<strong>可发布到 iOS、Android、H5、以及各种小程序</strong>（微信/支付宝/百度/头条/QQ/钉钉/淘宝）、快应用等多个平台。</li>
<li><strong>DCloud 公司</strong>拥有 500 万开发者用户，几十万应用案例、10 亿手机端月活用户，数千款 uni-app 插件、70+微信/qq 群。阿里小程序工具官方内置 uni-app（<a href="https://docs.alipay.com/mini/ide/0.70-stable" target="_blank" rel="noopener">详见</a>），腾讯课堂官方为 uni-app 录制培训课程（<a href="https://ask.dcloud.net.cn/article/35640" target="_blank" rel="noopener">详见</a>），开发者可以放心选择。</li>
<li>uni-app 在手，做啥都不愁。即使不跨端，uni-app 也是更好的小程序开发框架（<a href="https://ask.dcloud.net.cn/article/35947" target="_blank" rel="noopener">详见</a>）、更好的 App 跨平台框架、更方便的 H5 开发框架。不管领导安排什么样的项目，你都可以快速交付，不需要转换开发思维、不需要更改开发习惯。</li>
</ol>
<h2 id="五、快速上手-安装环境"><a href="#五、快速上手-安装环境" class="headerlink" title="五、快速上手+安装环境"></a>五、快速上手+安装环境</h2><p><strong>uni-app 支持通过可视化界面、</strong><a href="https://uniapp.dcloud.io/quickstart?id=%e9%80%9a%e8%bf%87vue-cli%e5%91%bd%e4%bb%a4%e8%a1%8c" target="_blank" rel="noopener"><strong>vue-cli 命令行</strong></a><strong> 两种方式快速创建项目。</strong></p>
<h3 id="通过-HBuilderX-可视化界面"><a href="#通过-HBuilderX-可视化界面" class="headerlink" title="通过  HBuilderX  可视化界面"></a><a href="https://uniapp.dcloud.io/quickstart?id=_1-%e9%80%9a%e8%bf%87-hbuilderx-%e5%8f%af%e8%a7%86%e5%8c%96%e7%95%8c%e9%9d%a2" target="_blank" rel="noopener">通过  HBuilderX  可视化界面</a></h3><ol>
<li>可视化的方式比较简单，HBuilderX 内置相关环境，开箱即用，无需配置 nodejs。</li>
<li>开始之前，开发者需先下载安装如下工具：</li>
<li>HBuilderX：<a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noopener">官方 IDE 下载地址</a></li>
<li><a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noopener">HBuilderX</a>是通用的前端开发工具，但为 uni-app 做了特别强化。</li>
<li>下载 App 开发版，可开箱即用；如下载标准版，在运行或发行 uni-app 时，会提示安装 uni-app 插件，插件下载完成后方可使用。</li>
</ol>
<h3 id="Chrome-最新版-Edge"><a href="#Chrome-最新版-Edge" class="headerlink" title="Chrome/最新版 Edge"></a>Chrome/最新版 Edge</h3><ul>
<li><a href="https://www.google.com/intl/zh-CN/chrome/" target="_blank" rel="noopener">https://www.google.com/intl/zh-CN/chrome/</a></li>
<li>Edge(最新)浏览器：<a href="https://www.microsoftedgeinsider.com/en-us/download" target="_blank" rel="noopener">下载地址（DEV 版本会消去插件开发者禁用状态）</a></li>
</ul>
<h3 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h3><ul>
<li>下载地址：<a href="https://developer.android.com/studio" target="_blank" rel="noopener">https://developer.android.com/studio</a></li>
</ul>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/wangmx1993328/article/details/81905195" target="_blank" rel="noopener">https://blog.csdn.net/wangmx1993328/article/details/81905195</a></li>
<li><a href="https://blog.csdn.net/qq_41976613/article/details/91432304?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.add_param_isCf&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.add_param_isCf" target="_blank" rel="noopener">https://blog.csdn.net/qq_41976613/article/details/91432304?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.add_param_isCf&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.add_param_isCf</a></li>
<li><a href="https://blog.csdn.net/qq_41976613/article/details/104394870" target="_blank" rel="noopener">https://blog.csdn.net/qq_41976613/article/details/104394870</a></li>
<li><a href="https://blog.csdn.net/liqz666/article/details/80243836?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.edu_weight" target="_blank" rel="noopener">https://blog.csdn.net/liqz666/article/details/80243836?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3.edu_weight</a></li>
<li><a href="https://blog.csdn.net/weixin_43717445/article/details/108719984" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43717445/article/details/108719984</a></li>
</ul>
<h3 id="gradle-国内源配置方法"><a href="#gradle-国内源配置方法" class="headerlink" title="gradle 国内源配置方法"></a>gradle 国内源配置方法</h3><p>Android Studio 在构建项目时会拉取 gradle 资源，而 goole 和 jcenter 在国内的网络环境并不好用，容易产生 connect timeout 等错误。</p>
<p>因此将地址修改成阿里云的国内镜像。<br>一、允许使用 maven 仓库<br>　　点击 File-&gt;Settings 进入设置界面，勾选“Enable embedded Maven repository”，</p>
<p>二、修改 build.gradle<br>　　在项目文件中找到 build.gradle 文件，修改其中的 buildscript 和 allprojects 地址：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> &#125;</span><br><span class="line">        maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.3.0-alpha13'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span>&#125;</span><br><span class="line">        maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">task</span> clean(type: <span class="keyword">Delete</span>) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>gradle 的文件下载下来以后会保存在本地，也有缓存。这意味着不同的项目如果有相同的 gradle 依赖，则不需要重复下载。因此也不是每次打开新项目都需要修改 build.gradle 文件。</p>
<p>如果修改 build.gradle 后重新 build 还是有错，可以尝试新建一个相同 API 版本的项目。</p>
<p>参考：</p>
<ul>
<li><a href="https://maven.aliyun.com/mvn/guide" target="_blank" rel="noopener">阿里云 gradle 配置指南</a></li>
</ul>
<h2 id="六、考核方式"><a href="#六、考核方式" class="headerlink" title="六、考核方式"></a>六、考核方式</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1605441751743-cb395908-39ce-4303-ab00-0c885d05abe9.png#align=left&amp;display=inline&amp;height=294&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=588&amp;originWidth=1192&amp;size=83972&amp;status=done&amp;style=none&amp;width=596" alt="image.png"></p>
<h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><h3 id="前端后端"><a href="#前端后端" class="headerlink" title="前端后端"></a>前端后端</h3><p>Web 前端分为网页设计师、网页美工、Web 前端开发工程师。<br>首先网页设计师是对网页的架构、色彩以及网站的整体页面代码负责。<br>网页美工只针对 UI 这块儿的东西，比如网站是否做的漂亮。<br>Web 前端开发工程师是负责交互设计的，需要和程序猿进行交互设计的配合。<br>Web 前端需要掌握的有脚本技术 javascript DIV+CSS 现下最流行的页面搭建技术，ajax 和 jquery 以及简单的后端程序等。 后端的话可供开发的语言有 asp、php、jsp、.NET 这些后端开发语言的话搭建环境都不一样，具体如果你想学的话看是想从事前端部分还是后端程序部分。后端开发如果有一定的条件的话可以转为软件开发。不过要有一定的语言基础，类似 java 语言、C++等。关键是看你的兴趣爱好。<br>这个到后期不会区分这么细，做前端到后期也会懂一些后端的技术，反之，后端也是。<br>在实际的开发过程中，我们当前这样定位前端、后端开发人员。 1)前端开发人员：精通 JS，能熟练应用 JQuery，懂 CSS，能熟练运用这些知识，进行交互效果的开发。 2)后端开发人员：会写 Java 代码，会写 SQL 语句，能做简单的数据库设计，会 Spring 和 iBatis，懂一些设计模式等。<br>现在来看，对前后端的要求还是蛮低的，尤其是后端，新员工经过实习之后都是可以参与到后端开发的，没有太高的技术门槛，唯一需要做的就是先变成熟练工种，这个阶段没有涉及到设计模式、架构、效率等一些列问题。在约的专家对我的主要建议就是从这里入手。<br>Web 前端: 顾名思义是来做 Web 的前端的。我们这里所说的前端泛指 Web 前端，也就是在 Web 应用中用户可以看得见碰得着的东西。包括 Web 页面的结构、Web 的外观视觉表现以及 Web 层面的交互实现。<br>Web 后端：后端更多的是与数据库进行交互以处理相应的业务逻辑。需要考虑的是如何实现功能、数据的存取、平台的稳定性与性能等。<br>通过企业对前后端人员招聘的要求，分析企业对前端、后端的技术要求：<br>Web 前端： 1)精通 HTML，能够书写语义合理，结构清晰，易维护的 HTML 结构。 2)精通 CSS，能够还原视觉设计，并兼容业界承认的主流浏览器。 3)熟悉 JavaScript，了解 ECMAScript 基础内容，掌握 1~2 种 js 框架，如 JQuery 4)对常见的浏览器兼容问题有清晰的理解，并有可靠的解决方案。 5)对性能有一定的要求，了解 yahoo 的性能优化建议，并可以在项目中有效实施。<br>Web 后端： 1)精通 jsp，servlet，java bean，JMS，EJB，Jdbc，Flex 开发，或者对相关的工具、类库以及框架非常熟悉，如 Velocity，Spring，Hibernate，iBatis，OSGI 等，对 Web 开发的模式有较深的理解 2)练使用 oracle、sqlserver、mysql 等常用的数据库系统，对数据库有较强的设计能力 3)熟悉 maven 项目配置管理工具，熟悉 tomcat、jboss 等应用服务器，同时对在高并发处理情况下的负载调优有相关经验者优先考虑 4)精通面向对象分析和设计技术，包括设计模式、UML 建模等 5)熟悉网络编程，具有设计和开发对外 API 接口经验和能力，同时具备跨平台的 API 规范设计以及 API 高效调用设计能力</p>
<h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><ul>
<li>PHP</li>
<li><p>Node.js</p>
<blockquote>
<p>JavaScript<br>node.js+express+ejs</p>
</blockquote>
</li>
<li><p>Spring Boot</p>
<blockquote>
<p>Java 框架，难</p>
</blockquote>
</li>
<li><p>数据库</p>
<blockquote>
<ul>
<li>MyBatis-Plus</li>
<li>DCloud</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="推荐课程"><a href="#推荐课程" class="headerlink" title="推荐课程"></a>推荐课程</h3>]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/im0an1/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[npm ERR! Unexpected end of JSON input while parsing]]></title>
      <link>https://www.wztlink1013.com/blog/gcwu9h/</link>
      <guid>https://www.wztlink1013.com/blog/gcwu9h/</guid>
      <pubDate>Tue Oct 27 2020 14:30:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[npm ERR! Unexpected end of JSON input while parsing]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm WARN deprecated circular-json@0.5.9: CircularJSON is <span class="keyword">in</span> maintenance only, flatted is its successor.</span><br><span class="line">npm ERR! Unexpected end of JSON input <span class="keyword">while</span> parsing near <span class="string">'...:"~0.0.0","webpack-de'</span></span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR! C:\文件路径\npm-cache_logs\2018-12-13T10_24_02_151Z-debug.log</span><br><span class="line">Package install failed, see above.</span><br></pre></td></tr></table></figure>
<p>（具体的报错信息和这个类似）<br>升级 hexo5.0 过程中，npm i –save 出错，各种插件都不能很好的下载。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>在 node 安装目录下配置的 node_cache 目录里面 <code>D:\Develop\nodejs</code><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603808754530-64316710-95b9-4e13-98dd-efda5197f782.png#align=left&amp;display=inline&amp;height=167&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=487&amp;originWidth=1128&amp;size=62358&amp;status=done&amp;style=shadow&amp;width=387" alt="image.png"><br>系统盘的 AppData/roaming 的文件夹并没有一个 npm 的缓存目录，安装 node 的时候将<code>D:\Develop\nodejs</code> 放到系统环境变量的 Path 路径了。</p>
<p>所以只需要一下两条命令即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm cache clean --force</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p><strong>多看看</strong><a href="https://www.ruanyifeng.com/blog/2016/01/npm-install.html" target="_blank" rel="noopener">阮一峰-npm 模块安装机制简介</a>，要对 npm 又进一步的理解。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://stackoverflow.com/questions/53759929/npm-err-unexpected-end-of-json-input-while-parsing" target="_blank" rel="noopener">stackoverflow-npm ERR! Unexpected end of JSON input while parsing</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2016/01/npm-install.html" target="_blank" rel="noopener">阮一峰-npm 模块安装机制简介</a></li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/gcwu9h/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Cannot set property 'innerHTML' of null]]></title>
      <link>https://www.wztlink1013.com/blog/fg4az5/</link>
      <guid>https://www.wztlink1013.com/blog/fg4az5/</guid>
      <pubDate>Mon Oct 26 2020 14:42:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[Cannot set property 'innerHTML' of null]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Cannot <span class="keyword">set</span> property 'innerHTML' of null</span><br></pre></td></tr></table></figure>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>如果 js 放在头部时，此时浏览器渲染未进入 dom 节点，因为提示为空，或者找不到。<br>所以把 js 代码放到最后或调用的对象后面就行了。id 元素在 script 脚本之后，不能引用，类似在使用变量之前对其进行定义一样。</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/fg4az5/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[LINKfatal error LNK1561: 必须定义入口点]]></title>
      <link>https://www.wztlink1013.com/blog/oyvpk4/</link>
      <guid>https://www.wztlink1013.com/blog/oyvpk4/</guid>
      <pubDate>Sun Oct 25 2020 10:10:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[LINK fatal error LNK1561: 必须定义入口点]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">LINK : fatal error LNK1561: 必须定义入口点</span><br></pre></td></tr></table></figure>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>每个应用程序(文件格式为 exe)都应该有个启动点，这个点就是 main 函数。缺少就会出现 link error 。</p>
<p>解决方法</p>
<ol>
<li>添加含有 main 函数的 CPP 文件</li>
<li>右击属性，在常规项中修改配置类型，将应用程序修改为库，动静态库</li>
</ol>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/oyvpk4/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[IDEA控制台输出中文乱码问题]]></title>
      <link>https://www.wztlink1013.com/blog/lkgrkx/</link>
      <guid>https://www.wztlink1013.com/blog/lkgrkx/</guid>
      <pubDate>Sun Oct 25 2020 08:30:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[IDEA控制台输出中文乱码问题]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 java 实现 ping/tracert 两个命令时候，输出到控制台里面中文乱码。</p>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>应该是调用了终端，而 windows 的终端默认是 GBK 的编码，所以要对其更改管用的 utf-8 编码，改为 GBK 编码。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603613519544-dc851d0f-e0c0-4a0a-9a2d-0043285b3db0.png#align=left&amp;display=inline&amp;height=441&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=881&amp;originWidth=706&amp;size=74813&amp;status=done&amp;style=shadow&amp;width=353" alt="image.png"></p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="编码更改"><a href="#编码更改" class="headerlink" title="编码更改"></a>编码更改</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603613302488-7bd6d045-81c3-470c-a57c-05a020588fcd.png#align=left&amp;display=inline&amp;height=511&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1022&amp;originWidth=1449&amp;size=141645&amp;status=done&amp;style=shadow&amp;width=724.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603613687953-21f1bbc9-b0bc-4db4-a935-3fcf6275909f.png#align=left&amp;display=inline&amp;height=185&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=369&amp;originWidth=1920&amp;size=135691&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603613719305-ac9dc39b-2c6a-4350-9f31-49d48dbedfe5.png#align=left&amp;display=inline&amp;height=110&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=220&amp;originWidth=764&amp;size=24151&amp;status=done&amp;style=none&amp;width=382" alt="image.png"></p>
<ul>
<li><code>Reload</code> 表示使用新编码重新加载，新编码不会保存到文件中</li>
<li><code>Convert</code> 表示使用新编码进行转换，新编码会保存到文件中</li>
<li>含有中文的代码文件，<code>Convert</code> 之后可能会使中文变成乱码，所以在转换成请做好备份，不然可能出现转换过程变成乱码，无法还原</li>
</ul>
<h3 id="BOM-问题"><a href="#BOM-问题" class="headerlink" title="BOM 问题"></a>BOM 问题</h3><blockquote>
<p>BOM：byte-order mark 字节顺序标记<br><a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F</a></p>
</blockquote>
<p>可能会出现的问题有：</p>
<blockquote>
<p>编译报错：<code>找不到符号</code>、<code>未结束的字符串文字</code> 或者是 提示 <code>非法字符</code></p>
</blockquote>
<p>解决办法：有上述百科可知，UTF-8 编码分有 BOM 和无 BOM 两种分类。IDEA 打开 Eclipse 项目，会提示出现上述编译问题，因为<strong>Eclipse 默认是有 BOM 的文件编译</strong>，而<strong>IDEA 只能编译无 BOM 的文件编译</strong>，所以解决办法就是对项目进行<strong>BOM 去除</strong>操作。</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/lkgrkx/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[莱文斯坦距离(LD)问题]]></title>
      <link>https://www.wztlink1013.com/blog/bvk4ok/</link>
      <guid>https://www.wztlink1013.com/blog/bvk4ok/</guid>
      <pubDate>Sat Oct 24 2020 10:26:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[莱温斯坦举例问题]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><strong>Levenshtein Distance</strong>也称<strong>莱文斯坦距离</strong></p>
<p>具体形式就是求一个字符串到另一个字符串所需要的<strong>最少操作步数</strong>，操作形式有：</p>
<ul>
<li>替换字母</li>
<li>删除字母</li>
<li>插入字母</li>
</ul>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>利用动态规划思想，将其剖析为一个个子问题，用其子问题的解决方式来解决该问题。问题分解出来的子问题存在重叠的情况，这是区分分治算法的不同。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603615056984-36cbce7c-c55e-456a-bb90-eb18471167e0.png#align=left&amp;display=inline&amp;height=335&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=670&amp;originWidth=1026&amp;size=202356&amp;status=done&amp;style=shadow&amp;width=513" alt="image.png"></p>
<p><strong>莱文斯坦的公式化</strong>表述为：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603614727015-dad259b0-7904-4e5d-9ec8-f4ac284af2e5.png#align=left&amp;display=inline&amp;height=94&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=188&amp;originWidth=874&amp;size=23400&amp;status=done&amp;style=shadow&amp;width=437" alt="image.png"></p>
<p>下面利用表格的形式来步步推出该字母所需要达到相应的目标字母序列的步数。</p>
<p>| |<br>| s | o | n |<br>| — | — | — | — | — |<br>|<br>| 0 | 1 | 2 | 3 |<br>| s | 1 | 0 | 1 | 2 |<br>| u | 2 | 1 | 1 | 2 |<br>| n | 3 | 2 | 2 | 1 |</p>
<p>记横（son）为 i 字符串序列，纵（sun）为 j 字符串序列。需要完成的字符串变换为 i-&gt;j。现举例格子数值该怎么填：</p>
<p>当到了第三行第三列的那一格，需要完成 s-&gt;s，有三种情况可以选择</p>
<ol>
<li>左操作(i-1,j)：删除 s 字符然后插入 s 字符===操作步数两步</li>
<li>上操作(i,j-1)：插入 s 字符然后删除 s 字符===操作步数两步</li>
<li>左上操作(i-1,j-1)：替换步骤，因为这个元素相同，故===操作步数零部</li>
</ol>
<p>然后选取上述三种情况最短步数的数值 0</p>
<p>然后再看第三行第四列，需要完成 so-&gt;s，</p>
<ol>
<li>左操作：删除 o===一步</li>
<li>上操作：插入 s 删除 so===三步</li>
<li>做上操作：替换 s 删除 o===两步</li>
</ol>
<p>综上应该填 1</p>
<p>其他格子也一样以上述方法填写。</p>
<p>有个作业遗留问题，在 CAAIS 里面每个得出的值右上标的 <code>U</code>  <code>L</code>  <code>0</code>  <code>1</code>  这些的依次顺序是怎么个顺序？<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603615446981-23bea432-08ee-490a-9037-018ba6280c3b.png#align=left&amp;display=inline&amp;height=201&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=401&amp;originWidth=651&amp;size=49834&amp;status=done&amp;style=shadow&amp;width=325.5" alt="image.png"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> LEN_NAME=<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> NS_LSEditDist &#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetLSEditDist</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetLSEdits</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y, <span class="keyword">int</span> OptD)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutputE</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutputP</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> m, n;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; E;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt; P;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> xe, ye;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LSEditDistCaller</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Initialization(x, y);</span><br><span class="line">        <span class="keyword">int</span> OptD = GetLSEditDist(x, y);</span><br><span class="line">        GetLSEdits(x, y);</span><br><span class="line">        Output(x, y, OptD);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetLSEditDist</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                E[i][j] = min(E[i - <span class="number">1</span>][j] + <span class="number">1</span>,</span><br><span class="line">                              min(E[i][j - <span class="number">1</span>] + <span class="number">1</span>,</span><br><span class="line">                                  E[i - <span class="number">1</span>][j - <span class="number">1</span>] + (x[i - <span class="number">1</span>] != y[j - <span class="number">1</span>])));</span><br><span class="line">                <span class="keyword">if</span> (E[i][j] == E[i - <span class="number">1</span>][j] + <span class="number">1</span>)</span><br><span class="line">                    P[i][j] = <span class="string">'U'</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (E[i][j] == E[i][j - <span class="number">1</span>] + <span class="number">1</span>)</span><br><span class="line">                    P[i][j] = <span class="string">'L'</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (x[i - <span class="number">1</span>] != y[j - <span class="number">1</span>])</span><br><span class="line">                    P[i][j] = <span class="string">'1'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> E[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetLSEdits</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = m, j = n;</span><br><span class="line">        <span class="keyword">while</span> (i &gt; <span class="number">0</span> || j &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (P[i][j] == <span class="string">'0'</span> || P[i][j] == <span class="string">'1'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                xe.insert(<span class="number">0</span>, <span class="number">1</span>, x[i - <span class="number">1</span>]);</span><br><span class="line">                ye.insert(<span class="number">0</span>, <span class="number">1</span>, y[j - <span class="number">1</span>]);</span><br><span class="line">                i--; j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (P[i][j] == <span class="string">'U'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                xe.insert(xe.begin(), x[i - <span class="number">1</span>]);</span><br><span class="line">                ye.insert(ye.begin(), <span class="string">'-'</span>);</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                xe.insert(xe.begin(), <span class="string">'-'</span>);</span><br><span class="line">                ye.insert(ye.begin(), y[j - <span class="number">1</span>]);</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        m = x.length();</span><br><span class="line">        n = y.length();</span><br><span class="line">        E.clear();</span><br><span class="line">        E.resize(m + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">        P.clear();</span><br><span class="line">        P.resize(m + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;(n + <span class="number">1</span>, <span class="string">'0'</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            E[<span class="number">0</span>][j] = j;</span><br><span class="line">            P[<span class="number">0</span>][j] = <span class="string">'L'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            E[i][<span class="number">0</span>] = i;</span><br><span class="line">            P[i][<span class="number">0</span>] = <span class="string">'U'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        xe.clear();</span><br><span class="line">        ye.clear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y, <span class="keyword">int</span> OptD)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Levenshtein distance: \n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Strings: %s, %s\n\n"</span>, x.c_str(), y.c_str());</span><br><span class="line">        OutputE(x, y);</span><br><span class="line">        OutputP(x, y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Distance: %d\n"</span>, OptD);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Edited strings:\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : xe)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%2c"</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ye)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%2c"</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutputE</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" E  "</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%2c"</span>, y[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%2c"</span>, x[i - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%2d"</span>, E[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutputP</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;x, <span class="keyword">const</span> <span class="built_in">string</span> &amp;y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" P  "</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%2c"</span>, y[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%2c"</span>, x[i - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%2c"</span>, P[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">//namespace NS_LSEditDist</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">rand_str</span><span class="params">(<span class="keyword">char</span> *str,<span class="keyword">const</span> <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;++i)</span><br><span class="line">        str[i]=<span class="string">'a'</span>+rand()%<span class="number">26</span>;</span><br><span class="line">    str[++i]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NS_LSEditDist;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt; <span class="built_in">abs</span> = &#123;</span><br><span class="line">            &#123; <span class="string">"water"</span>, <span class="string">"wheat"</span> &#125;,</span><br><span class="line">            &#123; <span class="string">"servant"</span>, <span class="string">"reveal"</span> &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> ab : <span class="built_in">abs</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> a = ab[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">string</span> b = ab[<span class="number">1</span>];</span><br><span class="line">        LSEditDistCaller(a, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"两个100位字符串的LevenShtein距离："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> name[LEN_NAME+<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">string</span> x = rand_str(name,LEN_NAME);</span><br><span class="line">    <span class="built_in">string</span> y = rand_str(name,LEN_NAME);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"字符串1："</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"字符串2："</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    LSEditDistCaller(x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E8%90%8A%E6%96%87%E6%96%AF%E5%9D%A6%E8%B7%9D%E9%9B%A2" target="_blank" rel="noopener">莱文斯坦距离</a></li>
<li><a href="https://www.dazhuanlan.com/2019/12/06/5dea0cb03281f/" target="_blank" rel="noopener">理解 Levenshtein Distancee</a></li>
<li><a href="https://www.throwable.club/2020/03/08/learn-about-levenshtein-distance-algorithm/" target="_blank" rel="noopener">Levenshtein Distance（编辑距离）算法与使用场景</a></li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/bvk4ok/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[分治算法+归并排序]]></title>
      <link>https://www.wztlink1013.com/blog/ab9fkt/</link>
      <guid>https://www.wztlink1013.com/blog/ab9fkt/</guid>
      <pubDate>Fri Oct 23 2020 15:22:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[分治算法+归并排序]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h2><p>此前学习的<strong>递归设计方法</strong>，是针对规模大的问题拆成规模小的问题，并且规模大的问题和规模小的问题的解决办法相同。</p>
<p>分治算法与递归设计方法的不同之处就是，该规模较大的问题分解为多个不重叠的子问题，并将其称为<strong>“分而治之”</strong><br>**<br>分治的三个步骤：</p>
<ol>
<li>分解：将原问题分解为若干个规模较小、相互不重叠与原问题形式相同的子问题</li>
<li>解决：<ol>
<li>若子问题规模较小且易于解决时候直接解出</li>
<li>否则递归地解决各个子问题</li>
</ol>
</li>
<li>合并：将各个子问题的解个并未原问题的解</li>
</ol>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><ul>
<li>分解：将排序数组分解为左右两个相等的不重叠的数组</li>
<li>解决：递归</li>
<li>合并：将两个已经有序的数组合并为一个有序的数组</li>
</ul>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603617542157-07613fda-ebed-4924-bf6a-091c19b12fc7.png#align=left&amp;display=inline&amp;height=431&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=861&amp;originWidth=895&amp;size=74826&amp;status=done&amp;style=shadow&amp;width=447.5" alt="image.png"></p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3>]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ab9fkt/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[task_06_数据链路层-广播信道]]></title>
      <link>https://www.wztlink1013.com/blog/bw80k6/</link>
      <guid>https://www.wztlink1013.com/blog/bw80k6/</guid>
      <pubDate>Fri Oct 23 2020 01:25:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[task_06_数据链路层-广播信道]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="《计算机网络》自主学习任务学习单"><a href="#《计算机网络》自主学习任务学习单" class="headerlink" title="《计算机网络》自主学习任务学习单"></a>《计算机网络》自主学习任务学习单</h2><p>2020 年 9 月 30 日，2020 年 10 月 7 日</p>
<table>
<thead>
<tr>
<th>课程介绍</th>
<th style="text-align:left">第三章 使用广播信道的数据链路层</th>
</tr>
</thead>
<tbody>
<tr>
<td>教学目标</td>
<td style="text-align:left">1、了解局域网拓扑结构类型及特点。</td>
</tr>
</tbody>
</table>
<p>2、了解 IEEE 802 参考模型和标准和了解通讯适配器原理。<br>3、了解广播信道媒体接入控制机制。<br>4、掌握 CSMA/CD 协议的基本原理。<br>5、掌握以太网 MAC 帧格式功能。<br>6、掌握透明网桥工作原理。<br>7、理解虚拟局域网工作原理。 |<br>| 学习内容 |<br>1、课下建议网上搜索观看中国大学 MOOC 教程《玩转计算机网络-计算机网络原理》（自主选择）（<a href="https://www.icourse163.org/course/QDU-1206901804" target="_blank" rel="noopener">https://www.icourse163.org/course/QDU-1206901804</a>）<br>03 数据链路层<br>3.3 使用广播信道的数据链路层<br>3.4 扩展的以太网<br>3.5 高速以太网<br>3.6 数据链路层设备<br>2、学习重点：<br>  （1）CSMA/CD 协议的碰撞监测原理及争用期概念。<br>（2）二进制指数类型退避算法。<br>（3）以太网三类硬件地址类型。<br>（4）以太网 MAC** <strong>帧格式功能解析。<br>（5）冲突域、广播域、广播风暴概念。<br>（6）网桥自学习算法。<br>（7）虚拟局域网使用的以太网帧格式解析。<br>  |<br>| 课堂讨论 | 1、为什么说以太网提供的服务是不可靠的交付？<br>2、以太网为什么要规定最短有效帧长？ |<br>| 课下作业 | 1、PPPOE 原理(PPT) （10 月 4 日提交）<br>2、自主学习</strong>网络协议分析工具 WireShark<strong>，PPT 演示利用 WireShark 捕获并</strong>分析以太网报文结构**。（10 月 6 日提交） |</p>
<h2 id="WireShark-使用"><a href="#WireShark-使用" class="headerlink" title="WireShark 使用"></a>WireShark 使用</h2><h3 id="ping-命令"><a href="#ping-命令" class="headerlink" title="ping 命令"></a>ping 命令</h3><blockquote>
<p>先使用 ping 命令找到需要抓包的网站的 ip 地址</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603431313609-3186fd0e-5e79-4e06-b8b8-20019fe29a14.png#align=left&amp;display=inline&amp;height=161&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=322&amp;originWidth=780&amp;size=51052&amp;status=done&amp;style=shadow&amp;width=390" alt="image.png"></p>
<h3 id="WireShark-使用及面板功能区域"><a href="#WireShark-使用及面板功能区域" class="headerlink" title="WireShark 使用及面板功能区域"></a>WireShark 使用及面板功能区域</h3><p>进入软件，若成功适配电脑网卡，则出现如下类似接口列表<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603434019601-cc879af3-8784-4ada-83dc-642d64e02981.png#align=left&amp;display=inline&amp;height=329&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1038&amp;originWidth=1920&amp;size=115692&amp;status=done&amp;style=shadow&amp;width=608" alt="image.png"><br>直接双击上图中 WLAN 行即可抓包，也可以如下设置网卡启动抓包<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603434096441-73c67d75-4e36-4e76-ae3c-0a8b8976da28.png#align=left&amp;display=inline&amp;height=301&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=911&amp;originWidth=1920&amp;size=114148&amp;status=done&amp;style=shadow&amp;width=634" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603431676018-f4988b52-5aef-4d92-8b9b-15109a08adab.png#align=left&amp;display=inline&amp;height=345&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1033&amp;originWidth=1920&amp;size=207427&amp;status=done&amp;style=shadow&amp;width=641" alt="image.png"></p>
<h3 id="1-区域-显示过滤器"><a href="#1-区域-显示过滤器" class="headerlink" title="1 区域-显示过滤器"></a>1 区域-显示过滤器</h3><blockquote>
<p>为过滤 ip 地址区域。相关表达式语法有</p>
</blockquote>
<ol>
<li>协议过滤。比如 TCP，只显示 TCP 协议。</li>
<li>IP 过滤。比如 ip.src == 192.168.1.102,显示源地址为 192.168.1.102，</li>
</ol>
<p>ip.dst == 192.168.1.102, 目标地址为 192.168.1.102。</p>
<ol start="3">
<li>端口过滤。   tcp.port ==80,   端口为 80 的</li>
</ol>
<p>tcp.srcport == 80,只显示 TCP 协议的愿端口为 80 的。</p>
<ol start="4">
<li>Http 模式过滤。http.request.method==”GET”,   只显示 HTTP GET 方法的。</li>
<li>逻辑运算符为 AND/ OR</li>
</ol>
<h3 id="2-区域-获取的数据包"><a href="#2-区域-获取的数据包" class="headerlink" title="2 区域-获取的数据包"></a>2 区域-获取的数据包</h3><blockquote>
<p>为封包列表(Packet List Pane)</p>
</blockquote>
<h3 id="3-区域-单个数据包各层详细内容"><a href="#3-区域-单个数据包各层详细内容" class="headerlink" title="3 区域-单个数据包各层详细内容"></a>3 区域-单个数据包各层详细内容</h3><blockquote>
<p>为封包详细信息 (Packet Details Pane)</p>
</blockquote>
<ol>
<li>Frame:物理层的数据帧概况。</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Frame 165: 74 bytes on wire (592 bits), 74 bytes captured (592 bits) on interface \Device\NPF_&#123;B016AB5D-3088-41BD-8997-48F19D9DEBFA&#125;, id 0 //165号帧，对方发送74字节，实际收到74字节</span><br><span class="line">    Interface id: 0 (\Device\NPF_&#123;B016AB5D-3088-41BD-8997-48F19D9DEBFA&#125;) //接口id为0</span><br><span class="line">        Interface name: \Device\NPF_&#123;B016AB5D-3088-41BD-8997-48F19D9DEBFA&#125;</span><br><span class="line">        Interface description: WLAN</span><br><span class="line">    Encapsulation type: Ethernet (1) //封装类型</span><br><span class="line">    Arrival Time: Oct 23, 2020 13:37:43.372763000 中国标准时间//捕获日期和时间（中国标准时间）</span><br><span class="line">    [Time shift for this packet: 0.000000000 seconds]</span><br><span class="line">    Epoch Time: 1603431463.372763000 seconds</span><br><span class="line">    [Time delta from previous captured frame: 0.008472000 seconds]//与前一包时间间隔</span><br><span class="line">    [Time delta from previous displayed frame: 0.000000000 seconds]</span><br><span class="line">    [Time since reference or first frame: 36.349570000 seconds]//此包与第一帧的时间间隔</span><br><span class="line">    Frame Number: 165//帧序号</span><br><span class="line">    Frame Length: 74 bytes (592 bits)//帧长度</span><br><span class="line">    Capture Length: 74 bytes (592 bits)//捕获字节长度</span><br><span class="line">    [Frame is marked: False]//是否做了标记</span><br><span class="line">    [Frame is ignored: False]//是否被忽略</span><br><span class="line">    [Protocols in frame: eth:ethertype:ip:icmp:data]//帧内封装的协议层次结构</span><br><span class="line">    [Coloring Rule Name: ICMP]//着色标记的协议名称</span><br><span class="line">    [Coloring Rule String: icmp || icmpv6]//着色规则显示的字符串</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Ethernet II:数据链路层以太网帧头部信息。</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Ethernet II, Src: IntelCor_fb:33:94 (0c:54:15:fb:33:94), Dst: HuaweiTe_da:ff:f3 (7c:a1:77:da:ff:f3)</span><br><span class="line">    Destination: HuaweiTe_da:ff:f3 (7c:a1:77:da:ff:f3)//目的MAC地址</span><br><span class="line">    Source: IntelCor_fb:33:94 (0c:54:15:fb:33:94)//源MAC地址（就是我电脑的MAC地址）</span><br><span class="line">    Type: IPv4 (0x0800)//0x0800表示使用IP协议</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603432754493-20843464-3bbb-4c01-9ceb-e781759a583d.png#align=left&amp;display=inline&amp;height=280&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=559&amp;originWidth=1920&amp;size=110051&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"></p>
<ol start="3">
<li>Internet Protocol Version 4:互联网层 IP 包头部信息。</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Internet Protocol Version 4, Src: 192.168.43.36, Dst: 39.156.66.18</span><br><span class="line">    0100 .... = Version: 4//互联网协议IPv4</span><br><span class="line">    .... 0101 = Header Length: 20 bytes (5)//IP包头部长度</span><br><span class="line">    Differentiated Services Field: 0x00 (DSCP: CS0, ECN: Not-ECT)//差分服务字段</span><br><span class="line">    Total Length: 60//IP包的总长度</span><br><span class="line">    Identification: 0xdf8c (57228)//标志字段</span><br><span class="line">    Flags: 0x0000//标记字段</span><br><span class="line">    Fragment offset: 0//分的偏移量</span><br><span class="line">    Time to live: 128//生存期TTL</span><br><span class="line">    Protocol: ICMP (1)//此包内封装的上层协议为TCP</span><br><span class="line">    Header checksum: 0x05ba [validation disabled]//头部数据的校验和</span><br><span class="line">    [Header checksum status: Unverified]</span><br><span class="line">    Source: 192.168.43.36//来源IP地址</span><br><span class="line">    Destination: 39.156.66.18//目标IP地址</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603433033837-c88714a1-eaa1-45cb-b836-5672e4515eee.png#align=left&amp;display=inline&amp;height=189&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=378&amp;originWidth=640&amp;size=84901&amp;status=done&amp;style=shadow&amp;width=320" alt="image.png"></p>
<ol start="4">
<li>Transmission Control Protocol:传输层 T 的数据段头部信息，此处是 TCP。</li>
</ol>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">Transmission Control Protocol, Src Port: 80 (80), Dst Port: 50362 (50362), Seq: 1025, Ack: 447, Len: 714</span><br><span class="line">Source Port: 80 (80) //源端口号</span><br><span class="line">Destination Port: 50362 (50362) //目标端口号</span><br><span class="line">Sequence number: 1025 (relative sequence number) //序列号（相对序列号）</span><br><span class="line">[Next sequence number: 1739 (relative sequence number)] //下一个序列号</span><br><span class="line">Acknowledgment number: 447    (relative ack number) //确认序列号</span><br><span class="line">Header Length: 20 bytes  //头部长度</span><br><span class="line">.... 0000 0001 1000 = Flags: 0x018 (PSH, ACK) //TCP标记长度</span><br><span class="line">Window size value: 5896  //流量控制的窗口大小</span><br><span class="line"><span class="attribute">Checksum</span>: 0x915b [validation disabled] //TCP数据段的校验和</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603433149527-0125377e-b64b-4e32-9eb0-e122d0c111cb.png#align=left&amp;display=inline&amp;height=190&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=379&amp;originWidth=579&amp;size=89043&amp;status=done&amp;style=shadow&amp;width=289.5" alt="image.png"></p>
<ol start="5">
<li><p>Hypertext Transfer Protocol:应用层的信息，此处是 HTTP 协议。</p>
</li>
<li><p>Data（312 bytes）：数据。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603434354567-45e84cc7-63a9-4136-adde-85c377345e92.png#align=left&amp;display=inline&amp;height=147&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=347&amp;originWidth=1920&amp;size=49744&amp;status=done&amp;style=shadow&amp;width=813" alt="image.png"></p>
<h3 id="分析-网站的请求与响应-MAC-报文结构"><a href="#分析-网站的请求与响应-MAC-报文结构" class="headerlink" title="分析-网站的请求与响应 MAC 报文结构"></a>分析-网站的请求与响应 MAC 报文结构</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603435802395-644285c3-35d8-4f12-928c-84b6af135fb0.png#align=left&amp;display=inline&amp;height=515&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1030&amp;originWidth=1920&amp;size=292782&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br>在登陆超星的过程中，数据传输所用到的协议等信息都在下图所示。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603435903948-4774be26-9c6c-407d-ab7a-07496dff6e99.png#align=left&amp;display=inline&amp;height=339&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=677&amp;originWidth=1920&amp;size=150647&amp;status=done&amp;style=shadow&amp;width=960" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603436181846-0df06ab5-bc9d-476b-bd86-bf7a2ec2e5cd.png#align=left&amp;display=inline&amp;height=120&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=239&amp;originWidth=1919&amp;size=69455&amp;status=done&amp;style=none&amp;width=959.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603436511302-2cbd6278-74d8-4e2c-8800-44a3dae1aec0.png#align=left&amp;display=inline&amp;height=441&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=882&amp;originWidth=1920&amp;size=222060&amp;status=done&amp;style=none&amp;width=960" alt="image.png"><br>这 14 个字节对应以太网 MAC 帧的前 14 个字节：前六个字节是目的地址，接下来六个字节是源地址，接下来两个字节是类型字段(用来标志上一层使用的是什么协议，以便把收到的 MAC 帧的数据交给上一层的这个协议。0x8000 代表上层使用的是 IP 数据报)，后面是数据部分。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603436551673-e3ffc81b-d102-4397-9449-ffd65de1cc0e.png#align=left&amp;display=inline&amp;height=174&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=347&amp;originWidth=785&amp;size=38179&amp;status=done&amp;style=shadow&amp;width=392.5" alt="image.png"><br>wireshark 把 8 字节的前序和 4 字节的 FCS 都给过滤掉了，所以捕获到的帧里看不到这两部分。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/82498482" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/82498482</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/264942536" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/264942536</a></li>
</ul>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/bw80k6/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[task_07_网络层]]></title>
      <link>https://www.wztlink1013.com/blog/qlrcf6/</link>
      <guid>https://www.wztlink1013.com/blog/qlrcf6/</guid>
      <pubDate>Fri Oct 23 2020 00:25:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[task_07_网络层]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="《计算机网络》自主学习任务学习单"><a href="#《计算机网络》自主学习任务学习单" class="headerlink" title="《计算机网络》自主学习任务学习单"></a>《计算机网络》自主学习任务学习单</h2><p>2020 年 10 月 14 日，2020 年 10 月 21 日</p>
<table>
<thead>
<tr>
<th>课程介绍</th>
<th>第四章网络层</th>
</tr>
</thead>
<tbody>
<tr>
<td>教学目标</td>
<td>1、理解网络层提供的服务特点，重点领会互联网设计理念。</td>
</tr>
</tbody>
</table>
<p>2、熟练掌握 IP 地址及其表示方法。<br>3、理解地址解析协议 ARP 实现 IP 地址与物理地址的映射。<br>4、基于互联网设计理念理解 IP 数据报格式功能。<br>5、理解 IP 层分组转发流程，掌握路由表参数设置。<br>6、理解子网划分原理，熟练掌握网络规划应用问题 |<br>| 学习内容 |<br>1、课下自主网上搜索观看中国大学 MOOC 教程《计算机网络》（哈尔滨工业大学）<br>（<a href="https://www.icourse163.org/learn/HIT-154005?tid=1450314458#/learn/announce" target="_blank" rel="noopener">https://www.icourse163.org/learn/HIT-154005?tid=1450314458#/learn/announce</a>）（自愿选择）<br>04 网络层<br>4.1 网络层服务<br>4.2 虚电路网络与数据报网络<br>4.3 IPv4 协议<br>2、学习重点：<br>  （1）虚电路服务与数据报服务特征。<br>（2）互连网络与虚拟互连网络概念区别<br>（3）五类 IP 编址及表示方法。<br>（4）地址解析协议 ARP 原理<br>（5）IP 的协议格式及 IP 的分片与重组机制。<br>（6）子网划分原理、子网掩码及网关基本概念<br>（7）IP 层分组转发算法。 |<br>| 课堂讨论 | 1、电信网络与互联网的服务差异性<br>2、互联网为什么不直接使用硬件地址进行通信？ |<br>| 课下作业 | 1、 ARP 攻击原理（1 班）。(PPT，10 月 18 日前提交）<br>2、 首部检验和原理（2 班）。（PPT，10 月 18 日前提交）<br>3、 学习网络协议分析工具 WireShark。（PPT，10 月 20 日前提交自主演示并析 ICMP、IP 报文结构）<br><strong>4、 编程实现命令 ping、traceroute 功能</strong></p>
<ul>
<li>10 月 30 日晚上 9 点前提交 PPT</li>
<li>代码及编译程序（源代码必须提交，编译程序是指 EXE 文件，如果没有可以不提交，但是所提交的作业要能演示出要求实现的功能）</li>
<li>课上自主演示 3（课堂演示可以使用自己的电脑）<br>|</li>
</ul>
<h2 id="ping-和-tracert"><a href="#ping-和-tracert" class="headerlink" title="ping 和 tracert"></a>ping 和 tracert</h2><h3 id="ping-和-tracert-命令"><a href="#ping-和-tracert-命令" class="headerlink" title="ping 和 tracert 命令"></a>ping 和 tracert 命令</h3><p><strong>ping</strong>命令一般用来测试两台机器或者机器和服务器之间网络是否连通。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603437323252-a3bf1470-c4ae-450a-b0fd-4d83281aab46.png#align=left&amp;display=inline&amp;height=156&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=311&amp;originWidth=1439&amp;size=57273&amp;status=done&amp;style=shadow&amp;width=719.5" alt="image.png"><br><strong>tracert</strong>命令显示数据报到达目标主机途中所经过的路径（路由器），并且显示到达每个节点（路由器）的花费时间，显示的信息比 ping 出来的信息要多，要详细。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1603437358485-aef50645-6ff9-4395-bbae-0bfe22ce3dc1.png#align=left&amp;display=inline&amp;height=269&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=538&amp;originWidth=1436&amp;size=63435&amp;status=done&amp;style=shadow&amp;width=718" alt="image.png"></p>
<h3 id="编程实现"><a href="#编程实现" class="headerlink" title="编程实现"></a>编程实现</h3><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String tracert = <span class="string">"tracert -h 10 "</span>; <span class="comment">//模拟tracert命令</span></span><br><span class="line">    String ping = <span class="string">"ping"</span>;<span class="comment">//模拟 ping 命令</span></span><br><span class="line">    String routePrint = <span class="string">"route print -4"</span>;<span class="comment">//模拟route print命令</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String input = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"resource"</span>)</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//利用while循环接收输入的命令行参数</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Please input destination server IP address ：\n"</span>);</span><br><span class="line"></span><br><span class="line">            input = scanner.next();</span><br><span class="line"></span><br><span class="line">            CommandUtil host = <span class="keyword">new</span> CommandUtil();</span><br><span class="line"></span><br><span class="line">            host.tracert = host.tracert + <span class="string">" "</span> + input;</span><br><span class="line"></span><br><span class="line">            host.ping = host.ping + <span class="string">" "</span> + input;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                host.command(host.routePrint);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line"></span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                host.command(host.tracert) ;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line"></span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                host.command(host.ping);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line"></span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            InetAddress ipAddress;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                ipAddress = InetAddress.getByName(input);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"IP address : "</span>+ipAddress);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownHostException exception) &#123;</span><br><span class="line"></span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            URL url;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                url = <span class="keyword">new</span> URL(<span class="string">"http"</span>,input,<span class="number">80</span>,<span class="string">"index.html"</span>);</span><br><span class="line"></span><br><span class="line">                System.out.println();<span class="comment">//输出服务器地址</span></span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"Get the Server-Name# : "</span>+url.getHost());</span><br><span class="line"></span><br><span class="line">                System.out.println();<span class="comment">//输出首页文件</span></span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"Get the default file# : "</span>+url.getFile());</span><br><span class="line"></span><br><span class="line">                System.out.println();<span class="comment">//输出首页协议和端口</span></span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"Get the protocol# : "</span>+url.getProtocol()+<span class="string">" "</span>+url.getPort());</span><br><span class="line"></span><br><span class="line">                System.out.println();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line"></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"Get serverName &amp; IPAddress："</span>+InetAddress.getByName(input));</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line"></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> freeMemory = Runtime.getRuntime().freeMemory();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Surplus memory of JVM: "</span>+freeMemory+<span class="string">"B"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//模拟 tracert 命令</span></span><br><span class="line"></span><br><span class="line">    StringBuffer commandResult = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">command</span><span class="params">(String tracerCommand)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="comment">//第一步：创建进程(是接口不必初始化)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.通过Runtime类的getRuntime().exec()传入需要运行的命令参数</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        System.out.println(InetAddress.getByName(<span class="string">"localhost"</span>)+<span class="string">" is tracking the destination server..."</span>);</span><br><span class="line"></span><br><span class="line">        Process process = Runtime.getRuntime().exec(tracerCommand);</span><br><span class="line"></span><br><span class="line">        readResult(process.getInputStream());</span><br><span class="line"></span><br><span class="line">        process.destroy();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//第二步：通过输入流来将命令执行结果输出到控制台</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readResult</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"></span><br><span class="line">        commandResult = <span class="keyword">new</span> StringBuffer();  <span class="comment">//初始化命令行</span></span><br><span class="line"></span><br><span class="line">        String commandInfo = <span class="keyword">null</span>; <span class="comment">//定义用于接收命令行执行结果的字符串</span></span><br><span class="line"></span><br><span class="line">        BufferedReader bufferedReader =</span><br><span class="line">                <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ( (commandInfo = bufferedReader.readLine()) != <span class="keyword">null</span>)  &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(commandInfo);</span><br><span class="line">        &#125;</span><br><span class="line">        bufferedReader.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h4><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\bin\java.exe <span class="string">"-javaagent:D:\JetBrains\IntelliJ IDEA 2020.1.3\lib\idea_rt.jar=39614:D:\JetBrains\IntelliJ IDEA 2020.1.3\bin"</span> -Dfile.encoding=GBK -classpath <span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">charsets</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">deploy</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">access</span>-<span class="title">bridge</span>-64.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">cldrdata</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">dnsns</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">jaccess</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">jfxrt</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">localedata</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">nashorn</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">sunec</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">sunjce_provider</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">sunmscapi</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">sunpkcs11</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">ext</span>\<span class="title">zipfs</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">javaws</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">jce</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">jfr</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">jfxswt</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">jsse</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">management</span>-<span class="title">agent</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">plugin</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">resources</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\Java\jdk1.<span class="number">8.0_181</span>\jre\<span class="class"><span class="keyword">lib</span>\<span class="title">rt</span>.<span class="title">jar</span>;</span><span class="symbol">D:</span>\project-java\jiwang\<span class="keyword">out</span>\production\jiwang CommandUtil</span><br><span class="line">Please input destination server IP address ：</span><br><span class="line"></span><br><span class="line">baidu.com</span><br><span class="line"></span><br><span class="line">localhost/<span class="number">127.0</span>.<span class="number">0.1</span> is tracking the destination server...</span><br><span class="line">===========================================================================</span><br><span class="line">接口列表</span><br><span class="line">  <span class="number">6</span>...b4 b6 <span class="number">86</span> df cc <span class="number">9</span>d ......Realtek PCIe GbE Family Controller</span><br><span class="line"> <span class="number">11</span>...<span class="number">0</span>c <span class="number">54</span> <span class="number">15</span> fb <span class="number">33</span> <span class="number">95</span> ......Microsoft Wi-Fi Direct Virtual Adapter</span><br><span class="line"> <span class="number">14</span>...<span class="number">0e</span> <span class="number">54</span> <span class="number">15</span> fb <span class="number">33</span> <span class="number">94</span> ......Microsoft Wi-Fi Direct Virtual Adapter <span class="comment">#2</span></span><br><span class="line"> <span class="number">16</span>...<span class="number">0</span>c <span class="number">54</span> <span class="number">15</span> fb <span class="number">33</span> <span class="number">94</span> ......Intel(R) Dual Band Wireless-AC <span class="number">3168</span></span><br><span class="line"> <span class="number">17</span>...<span class="number">0</span>c <span class="number">54</span> <span class="number">15</span> fb <span class="number">33</span> <span class="number">98</span> ......Bluetooth Device (Personal Area Network)</span><br><span class="line">  <span class="number">1</span>...........................Software Loopback Interface <span class="number">1</span></span><br><span class="line">===========================================================================</span><br><span class="line"></span><br><span class="line">IPv4 路由表</span><br><span class="line">===========================================================================</span><br><span class="line">活动路由:</span><br><span class="line">网络目标        网络掩码          网关       接口   跃点数</span><br><span class="line">          <span class="number">0.0</span>.<span class="number">0.0</span>          <span class="number">0.0</span>.<span class="number">0.0</span>      <span class="number">192.168</span>.<span class="number">2.1</span>    <span class="number">192.168</span>.<span class="number">2.132</span>     <span class="number">35</span></span><br><span class="line">        <span class="number">127.0</span>.<span class="number">0.0</span>        <span class="number">255.0</span>.<span class="number">0.0</span>            在链路上         <span class="number">127.0</span>.<span class="number">0.1</span>    <span class="number">331</span></span><br><span class="line">        <span class="number">127.0</span>.<span class="number">0.1</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上         <span class="number">127.0</span>.<span class="number">0.1</span>    <span class="number">331</span></span><br><span class="line">  <span class="number">127.255</span>.<span class="number">255.255</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上         <span class="number">127.0</span>.<span class="number">0.1</span>    <span class="number">331</span></span><br><span class="line">      <span class="number">192.168</span>.<span class="number">2.0</span>    <span class="number">255.255</span>.<span class="number">255.0</span>            在链路上     <span class="number">192.168</span>.<span class="number">2.132</span>    <span class="number">291</span></span><br><span class="line">    <span class="number">192.168</span>.<span class="number">2.132</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上     <span class="number">192.168</span>.<span class="number">2.132</span>    <span class="number">291</span></span><br><span class="line">    <span class="number">192.168</span>.<span class="number">2.255</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上     <span class="number">192.168</span>.<span class="number">2.132</span>    <span class="number">291</span></span><br><span class="line">        <span class="number">224.0</span>.<span class="number">0.0</span>        <span class="number">240.0</span>.<span class="number">0.0</span>            在链路上         <span class="number">127.0</span>.<span class="number">0.1</span>    <span class="number">331</span></span><br><span class="line">        <span class="number">224.0</span>.<span class="number">0.0</span>        <span class="number">240.0</span>.<span class="number">0.0</span>            在链路上     <span class="number">192.168</span>.<span class="number">2.132</span>    <span class="number">291</span></span><br><span class="line">  <span class="number">255.255</span>.<span class="number">255.255</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上         <span class="number">127.0</span>.<span class="number">0.1</span>    <span class="number">331</span></span><br><span class="line">  <span class="number">255.255</span>.<span class="number">255.255</span>  <span class="number">255.255</span>.<span class="number">255.255</span>            在链路上     <span class="number">192.168</span>.<span class="number">2.132</span>    <span class="number">291</span></span><br><span class="line">===========================================================================</span><br><span class="line">永久路由:</span><br><span class="line">  无</span><br><span class="line"></span><br><span class="line">localhost/<span class="number">127.0</span>.<span class="number">0.1</span> is tracking the destination server...</span><br><span class="line"></span><br><span class="line">通过最多 <span class="number">10</span> 个跃点跟踪</span><br><span class="line">到 baidu.com [<span class="number">39.156</span>.<span class="number">69.79</span>] 的路由:</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>     <span class="number">1</span> ms     <span class="number">1</span> ms     <span class="number">1</span> ms  RM2100.lan [<span class="number">192.168</span>.<span class="number">2.1</span>]</span><br><span class="line">  <span class="number">2</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">3</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">4</span>     <span class="number">4</span> ms     <span class="number">3</span> ms     <span class="number">3</span> ms  <span class="number">192.168</span>.<span class="number">100.253</span></span><br><span class="line">  <span class="number">5</span>     <span class="number">4</span> ms     <span class="number">5</span> ms    <span class="number">10</span> ms  <span class="number">192.168</span>.<span class="number">100.114</span></span><br><span class="line">  <span class="number">6</span>     <span class="number">3</span> ms     <span class="number">3</span> ms     <span class="number">3</span> ms  <span class="number">192.168</span>.<span class="number">100.118</span></span><br><span class="line">  <span class="number">7</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">8</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">9</span>     *        *        *     请求超时。</span><br><span class="line"> <span class="number">10</span>     *        *        *     请求超时。</span><br><span class="line"></span><br><span class="line">跟踪完成。</span><br><span class="line"></span><br><span class="line">localhost/<span class="number">127.0</span>.<span class="number">0.1</span> is tracking the destination server...</span><br><span class="line"></span><br><span class="line">正在 Ping baidu.com [<span class="number">39.156</span>.<span class="number">69.79</span>] 具有 <span class="number">32</span> 字节的数据:</span><br><span class="line">来自 <span class="number">39.156</span>.<span class="number">69.79</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">20</span>ms TTL=<span class="number">48</span></span><br><span class="line">来自 <span class="number">39.156</span>.<span class="number">69.79</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">20</span>ms TTL=<span class="number">48</span></span><br><span class="line">来自 <span class="number">39.156</span>.<span class="number">69.79</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">20</span>ms TTL=<span class="number">48</span></span><br><span class="line">来自 <span class="number">39.156</span>.<span class="number">69.79</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">20</span>ms TTL=<span class="number">48</span></span><br><span class="line"></span><br><span class="line"><span class="number">39.156</span>.<span class="number">69.79</span> 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = <span class="number">4</span>，已接收 = <span class="number">4</span>，丢失 = <span class="number">0</span> (<span class="number">0</span>% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = <span class="number">20</span>ms，最长 = <span class="number">20</span>ms，平均 = <span class="number">20</span>ms</span><br><span class="line">IP address : baidu.com/<span class="number">39.156</span>.<span class="number">69.79</span></span><br><span class="line"></span><br><span class="line">Get the Server-Name<span class="comment"># : baidu.com</span></span><br><span class="line"></span><br><span class="line">Get the default file<span class="comment"># : index.html</span></span><br><span class="line"></span><br><span class="line">Get the protocol<span class="comment"># : http 80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Get serverName &amp; IPAddress：baidu.com/<span class="number">39.156</span>.<span class="number">69.79</span></span><br><span class="line">Surplus memory <span class="keyword">of</span> <span class="symbol">JVM:</span> <span class="number">124194640</span>B</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/qlrcf6/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[C++随机字符串生成函数]]></title>
      <link>https://www.wztlink1013.com/blog/zeszpb/</link>
      <guid>https://www.wztlink1013.com/blog/zeszpb/</guid>
      <pubDate>Thu Oct 22 2020 15:11:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[C++随机字符串生成函数]]>
      
      </description>
      <content:encoded><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//C++ 随机字符串生成函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> LEN_NAME=<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">rand_str</span><span class="params">(<span class="keyword">char</span> *str,<span class="keyword">const</span> <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;++i)</span><br><span class="line">        str[i]=<span class="string">'A'</span>+rand()%<span class="number">26</span>;</span><br><span class="line">    str[++i]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> name[LEN_NAME+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;rand_str(name,LEN_NAME)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/zeszpb/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[JAVA-正则表达式]]></title>
      <link>https://www.wztlink1013.com/blog/xm1a2g/</link>
      <guid>https://www.wztlink1013.com/blog/xm1a2g/</guid>
      <pubDate>Thu Oct 22 2020 11:45:47 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[JAVA-正则表达式]]>
      
      </description>
      <content:encoded></content:encoded>
      <comments>https://www.wztlink1013.com/blog/xm1a2g/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[BOM（浏览器对象模型）]]></title>
      <link>https://www.wztlink1013.com/blog/yoi6sh/</link>
      <guid>https://www.wztlink1013.com/blog/yoi6sh/</guid>
      <pubDate>Thu Oct 15 2020 09:14:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[BOM(浏览器对象模型)学习笔记]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="BOM（浏览器对象模型）"><a href="#BOM（浏览器对象模型）" class="headerlink" title="BOM（浏览器对象模型）"></a>BOM（浏览器对象模型）</h2><blockquote>
<p>BOM 作用对象就是浏览器，从这一方面来说，DOM 也是 BOM 的属性之一<br>通常所使用的 onclick 事件其实是 window.onclick，只不过是默认不写。</p>
</blockquote>
<h2 id="窗口大小"><a href="#窗口大小" class="headerlink" title="窗口大小"></a>窗口大小</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> w =</span><br><span class="line">  <span class="built_in">window</span>.innerWidth ||</span><br><span class="line">  <span class="built_in">document</span>.documentElement.clientWidth ||</span><br><span class="line">  <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> h =</span><br><span class="line">  <span class="built_in">window</span>.innerHeight ||</span><br><span class="line">  <span class="built_in">document</span>.documentElement.clientHeight ||</span><br><span class="line">  <span class="built_in">document</span>.body.clientHeight;</span><br></pre></td></tr></table></figure>
<h2 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h2><p>可用的屏幕宽度/高度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">document</span>.write(<span class="string">"可用宽度: "</span> + screen.availWidth);&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h2><p>用于获得当前的页面地址（URL），并且把浏览器重定向到新的页面</p>
<ul>
<li>location.hostname：返回 web 主机域名</li>
<li>location.pathname：返回当前页面的路径和文件名</li>
<li>location.port：返回 web 主机的端口（80 或 443）</li>
<li>location.protocol：返回所使用的 web 协议</li>
<li>location.href：返回当前页面的 URL</li>
<li>location.assign()：加载新的文档</li>
<li>location.replace(‘’)：进入新的页面</li>
</ul>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p>包含浏览器的历史</p>
<h2 id="Navigator"><a href="#Navigator" class="headerlink" title="Navigator"></a>Navigator</h2><p>浏览器相关信息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"example"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">txt = "&lt;p&gt;浏览器代号: " + navigator.appCodeName + "&lt;/</span>p&gt;<span class="string">";</span></span><br><span class="line"><span class="string">txt+= "</span>&lt;p&gt;浏览器名称: <span class="string">" + navigator.appName + "</span>&lt;<span class="regexp">/p&gt;";</span></span><br><span class="line"><span class="regexp">txt+= "&lt;p&gt;浏览器版本: " + navigator.appVersion + "&lt;/</span>p&gt;<span class="string">";</span></span><br><span class="line"><span class="string">txt+= "</span>&lt;p&gt;启用Cookies: <span class="string">" + navigator.cookieEnabled + "</span>&lt;<span class="regexp">/p&gt;";</span></span><br><span class="line"><span class="regexp">txt+= "&lt;p&gt;硬件平台: " + navigator.platform + "&lt;/</span>p&gt;<span class="string">";</span></span><br><span class="line"><span class="string">txt+= "</span>&lt;p&gt;用户代理: <span class="string">" + navigator.userAgent + "</span>&lt;<span class="regexp">/p&gt;";</span></span><br><span class="line"><span class="regexp">txt+= "&lt;p&gt;用户代理语言: " + navigator.systemLanguage + "&lt;/</span>p&gt;<span class="string">";</span></span><br><span class="line"><span class="string">document.getElementById("</span>example<span class="string">").innerHTML=txt;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h2><ul>
<li>警告框：alert(“hello”);</li>
<li>确认框：confirm(“按下按钮”);</li>
<li>提示框：prompt(“请输入你的名字”,”Harry Potter”);</li>
<li>换行：alert(“Hello\nHow are you?”);</li>
</ul>
<h2 id="计时事件"><a href="#计时事件" class="headerlink" title="计时事件"></a>计时事件</h2><blockquote>
<p>设定一个时间然后再执行代码</p>
</blockquote>
<ul>
<li>setInterval()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;在页面显示一个时钟&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p id="demo"&gt;&lt;/</span>p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> myVar=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;myTimer()&#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTimer</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">true<span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">true<span class="keyword">var</span> t=d.toLocaleTimeString();</span><br><span class="line">true<span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=t;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>clearInterval()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;页面上显示时钟：&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p id="demo"&gt;&lt;/</span>p&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"myStopFunction()"</span>&gt;停止&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var myVar=setInterval(function()&#123;myTimer()&#125;,1000);</span></span><br><span class="line"><span class="regexp">function myTimer()&#123;</span></span><br><span class="line"><span class="regexp">	var d=new Date();</span></span><br><span class="line"><span class="regexp">	var t=d.toLocaleTimeString();</span></span><br><span class="line"><span class="regexp">	document.getElementById("demo").innerHTML=t;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">function myStopFunction()&#123;</span></span><br><span class="line"><span class="regexp">	clearInterval(myVar);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>setTimeouot()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;点击按钮，在等待 <span class="number">3</span> 秒后弹出 <span class="string">"Hello"</span>。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;button onclick="myFunction()"&gt;点我&lt;/</span>button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">truesetTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>clearTimeout()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;点击第一个按钮等待<span class="number">3</span>秒后出现<span class="string">"Hello"</span>弹框。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;点击第二个按钮来阻止第一个函数运行。（你必须在3秒之前点击它）。&lt;/</span>p&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"myFunction()"</span>&gt;点我&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;button onclick="myStopFunction()"&gt;停止弹框&lt;/</span>button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> myVar;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">truemyVar=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myStopFunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">trueclearTimeout(myVar);</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>记录用户在网页中信息</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/yoi6sh/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[DOM（文档对象模型）]]></title>
      <link>https://www.wztlink1013.com/blog/fkgmui/</link>
      <guid>https://www.wztlink1013.com/blog/fkgmui/</guid>
      <pubDate>Thu Oct 15 2020 08:30:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[DOM学习笔记]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="DOM（文档对象模型）"><a href="#DOM（文档对象模型）" class="headerlink" title="DOM（文档对象模型）"></a>DOM（文档对象模型）</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1598689552517-1346b948-8d7e-49f9-b450-fdbbcee61c73.png#align=left&amp;display=inline&amp;height=247&amp;margin=%5Bobject%20Object%5D&amp;originHeight=334&amp;originWidth=950&amp;size=0&amp;status=done&amp;style=shadow&amp;width=703" alt></p>
<h2 id="查找-HTML-元素"><a href="#查找-HTML-元素" class="headerlink" title="查找 HTML 元素"></a>查找 HTML 元素</h2><blockquote>
<p>通过 id、标签名、类名来查找</p>
</blockquote>
<ul>
<li>document.getElementById(“”)</li>
<li>document.getElementByTagName(“”)</li>
<li>document.getElementByClassName(“”)</li>
</ul>
<h2 id="改变-HTML"><a href="#改变-HTML" class="headerlink" title="改变 HTML"></a>改变 HTML</h2><ul>
<li>直接通过 js 将新的内容加入到 HTML 内容中，不过需要需要注意的就是，不要在 HTMl 都加载完了再触发该 js，不然会让新加的内容覆盖原来的已加载完的 HTML 内容。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">document</span>.write(<span class="built_in">Date</span>());&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>改变 HTML 内容</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> element=<span class="built_in">document</span>.getElementById(<span class="string">"header"</span>); element.innerHTML=<span class="string">"新标题"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>改变 HTML 属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">document</span>.getElementById(<span class="string">"image"</span>).src=<span class="string">"landscape.jpg"</span>;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="改变-CSS"><a href="#改变-CSS" class="headerlink" title="改变 CSS"></a>改变 CSS</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.color=<span class="string">"blue"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.fontFamily=<span class="string">"Arial"</span>;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.fontSize=<span class="string">"larger"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>改变 CSS 也可以用触发事件的方式来改变</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;h1 id=<span class="string">"id1"</span>&gt;我的标题 <span class="number">1</span>&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;button type="button"</span></span><br><span class="line"><span class="regexp">onclick="document.getElementById('id1').style.color='red'"&gt;点我!&lt;/</span>button&gt;</span><br></pre></td></tr></table></figure>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><blockquote>
<p>当对 HTML 元素或者鼠标执行某些行为的时候，就会触发一些时间</p>
</blockquote>
<ul>
<li>onclick：点击具有该事件属性的元素时，就会触发</li>
</ul>
<p>具体的形式有两种：第一种是直接在标签中写完整 js 文本，第二种在 script 代码中调用元素的 id 然后在运行代码</p>
<ul>
<li>onload 和 unload：该元素已经全部展示完毕</li>
<li>onchange：“改变”即触发，最常用的就是 input 标签中的使用，比如输入完自己的账号，然后想让账号小写字母全部编程大写字母就可以了</li>
<li>onmouseover 和 onmouseout：鼠标移到/移出该处执行</li>
<li>onmousedown 和 onmouseup：鼠标指针一直点着/松着触发</li>
</ul>
<h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><blockquote>
<p>对一个元素执行不同事件的时候，触发相应的结果，结果就是一个元素对其“监听”。</p>
</blockquote>
<p><code>element.addEventListener(event, function, useCapture);</code></p>
<ul>
<li>第一个参数是事件的类型 (如 “click” 或 “mousedown”).</li>
<li>第二个参数是事件触发后调用的函数。</li>
<li><p>第三个参数是个布尔值用于描述事件是冒泡还是捕获。该参数是可选的。</p>
<blockquote>
<p>注意:不要使用 “on” 前缀。 例如，使用 “click” ,而不是使用 “onclick”。</p>
</blockquote>
</li>
<li><p>可以对一个元素赋以多个事件监听</p>
</li>
<li>也可以对 window 对象进行事件监听</li>
<li>事件冒泡和事件捕获</li>
<li>移除事件监听的方法 removeEventListener()</li>
</ul>
<p>**</p>
<h2 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h2><blockquote>
<p>给文档中添加新的元素，或者是改变元素</p>
</blockquote>
<ul>
<li>创建新的 HTML 元素 (节点) - appendChild()</li>
<li>创建新的 HTML 元素 (节点) - insertBefore()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"div1"</span>&gt;</span><br><span class="line">&lt;p id=<span class="string">"p1"</span>&gt;这是一个段落。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p id="p2"&gt;这是另外一个段落。&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var para = document.createElement("p");</span></span><br><span class="line"><span class="regexp">var node = document.createTextNode("这是一个新的段落。");</span></span><br><span class="line"><span class="regexp">para.appendChild(node);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">var element = document.getElementById("div1");</span></span><br><span class="line"><span class="regexp">var child = document.getElementById("p1");</span></span><br><span class="line"><span class="regexp">element.insertBefore(para, child);</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>移除已存在的元素</li>
</ul>
<h2 id="HTMLCollection"><a href="#HTMLCollection" class="headerlink" title="HTMLCollection"></a>HTMLCollection</h2><blockquote>
<p>就是将“文档”中所有选定的元素进行“编号”，有点类似数组但不是数组。</p>
</blockquote>
<p>就如查找出文档中所有</p><p>标签，按照顺序又第 0 个、第 1 个依次列举下来。</p>
<ul>
<li>length 属性，类似数组，但不是！也就意味着没有通常我们印象中的数组其他属性。</li>
</ul>
<h2 id="NodeList"><a href="#NodeList" class="headerlink" title="NodeList"></a>NodeList</h2><p>NodeList 对象是一个从文档中获取的节点列表 (集合) 。<br>NodeList 对象类似 HTMLCollection 对象。<br>一些旧版本浏览器中的方法（如：getElementsByClassName()）返回的是 NodeList 对象，而不是 HTMLCollection 对象。<br>所有浏览器的 childNodes 属性返回的是 NodeList 对象。<br>大部分浏览器的 querySelectorAll() 返回 NodeList 对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h2&gt;JavaScript HTML DOM!&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p&gt;Hello World!&lt;/</span>p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;Hello Runoob!&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p id="demo"&gt;&lt;/</span>p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> myNodelist = <span class="built_in">document</span>.querySelectorAll(<span class="string">"p"</span>);</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"文档包含 "</span> + myNodelist.length + <span class="string">" 个段落。"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>两者区别：</strong><br>HTMLCollection 是 HTML 元素的集合。<br>NodeList 是一个文档节点的集合。<br>NodeList 与 HTMLCollection 有很多类似的地方。<br>NodeList 与 HTMLCollection 都与数组对象有点类似，可以使用索引 (0, 1, 2, 3, 4, …) 来获取元素。<br>NodeList 与 HTMLCollection 都有 length 属性。<br>HTMLCollection 元素可以通过 name，id 或索引来获取。<br>NodeList 只能通过索引来获取。<br>只有 NodeList 对象有包含属性节点和文本节点。</p>
<h2 id="querySelector"><a href="#querySelector" class="headerlink" title="querySelector"></a>querySelector</h2><blockquote>
<p>功能：返回文档中匹配指定的 CSS 选择器中的一个元素</p>
</blockquote>
<p><code>document.querySelector(&quot;#demo&quot;);</code></p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/fkgmui/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[DB_MBook初始化]]></title>
      <link>https://www.wztlink1013.com/blog/tzgflu/</link>
      <guid>https://www.wztlink1013.com/blog/tzgflu/</guid>
      <pubDate>Fri Oct 02 2020 11:05:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[DB_MBook初始化]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="HLend-表"><a href="#HLend-表" class="headerlink" title="HLend 表"></a>HLend 表</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1601636857075-81d048ad-db40-4521-82fc-454e81fb90c3.png#align=left&amp;display=inline&amp;height=177&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=353&amp;originWidth=945&amp;size=114727&amp;status=done&amp;style=shadow&amp;width=472.5" alt="image.png"></p>
<h2 id="TBLend"><a href="#TBLend" class="headerlink" title="TBLend"></a>TBLend</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1601691449905-21a5348a-8992-4781-97e9-4a6aef984fc0.png#align=left&amp;display=inline&amp;height=424&amp;margin=%5Bobject%20Object%5D&amp;name=Snipaste_2020-10-02_19-08-13.png&amp;originHeight=673&amp;originWidth=419&amp;size=129974&amp;status=done&amp;style=shadow&amp;width=264" alt="Snipaste_2020-10-02_19-08-13.png"></p>
<h2 id="TBook"><a href="#TBook" class="headerlink" title="TBook"></a>TBook</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1601691447497-aaf04d12-fea6-4802-b310-16726ee47c7e.png#align=left&amp;display=inline&amp;height=159&amp;margin=%5Bobject%20Object%5D&amp;name=Snipaste_2020-10-02_19-08-46.png&amp;originHeight=319&amp;originWidth=1424&amp;size=135437&amp;status=done&amp;style=shadow&amp;width=710" alt="Snipaste_2020-10-02_19-08-46.png"></p>
<h2 id="TLend"><a href="#TLend" class="headerlink" title="TLend"></a>TLend</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1601691444632-812f7425-fc06-4878-95f8-434b68589872.png#align=left&amp;display=inline&amp;height=359&amp;margin=%5Bobject%20Object%5D&amp;name=Snipaste_2020-10-02_19-09-12.png&amp;originHeight=579&amp;originWidth=838&amp;size=148728&amp;status=done&amp;style=shadow&amp;width=520" alt="Snipaste_2020-10-02_19-09-12.png"></p>
<h2 id="TReader"><a href="#TReader" class="headerlink" title="TReader"></a>TReader</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1484158/1601691440813-2e8b6a45-785f-4ae6-8413-d9b9ad46f9ab.png#align=left&amp;display=inline&amp;height=293&amp;margin=%5Bobject%20Object%5D&amp;name=Snipaste_2020-10-02_19-10-16.png&amp;originHeight=609&amp;originWidth=1280&amp;size=163569&amp;status=done&amp;style=shadow&amp;width=615" alt="Snipaste_2020-10-02_19-10-16.png"></p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/tzgflu/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[task_05_数据链路层]]></title>
      <link>https://www.wztlink1013.com/blog/eblx0i/</link>
      <guid>https://www.wztlink1013.com/blog/eblx0i/</guid>
      <pubDate>Mon Sep 28 2020 01:25:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[task_05_数据链路层]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="《计算机网络》自主学习任务学习单"><a href="#《计算机网络》自主学习任务学习单" class="headerlink" title="《计算机网络》自主学习任务学习单"></a>《计算机网络》自主学习任务学习单</h2><p>2020 年 9 月 23 日，2020 年 9 月 28 日</p>
<table>
<thead>
<tr>
<th>课程介绍</th>
<th>第三章 数据链路层</th>
</tr>
</thead>
<tbody>
<tr>
<td>教学目标</td>
<td>1、了解数据链路层使用的两种信道类型</td>
</tr>
</tbody>
</table>
<p>2、了解数据链路层的功能<br>3、了解帧定界原理。<br>4、掌握数据帧透明传输实施机制。<br>5、掌握 CRC 差错检测原理。<br>6、掌握 PPP 协议。 |<br>| 学习内容 |<br>1、课下自主网上搜索观看中国大学 MOOC 教程《玩转计算机网络-计算机网络原理》（参考学习，不要求）<br>（<a href="https://www.icourse163.org/course/QDU-1206901804" target="_blank" rel="noopener">https://www.icourse163.org/course/QDU-1206901804</a>）<br>03 数据链路层<br>3.1 数据链路层概述<br>3.2 PPP 协议<br>2、学习重点：<br>  （1）用字节填充法、比特填充法解决透明传输的问题。<br>（2）循环冗余检验的原理及计算方法<br>（3）PPP 协议格式。<br>  |<br>| 课堂讨论 | 1、如何做到数据链路层的可靠传输？ |<br>| 课下作业 | 1、循环冗余检错原理（PPT）（1 班作业，9 月 28 日前提交）<br>2、SLIP 与 HDLC 协议原理（PPT）（2 班作业，9 月 28 日前提交） |</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/eblx0i/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[高级概念]]></title>
      <link>https://www.wztlink1013.com/blog/vab07n/</link>
      <guid>https://www.wztlink1013.com/blog/vab07n/</guid>
      <pubDate>Wed Sep 23 2020 14:15:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[数据库当中的一些概念]]>
      
      </description>
      <content:encoded><![CDATA[<h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><p>如果是 MyISAM 的数据库引擎，那么直接复制相应的数据库文件即可。<br>如果是 InnoDB 则需要利用命令。这也是更为一般的普适方法。</p>
<p>利用 MySQL 提供的工具———— <strong>mysqldump</strong></p>
<h2 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">mysqldump</span> <span class="selector-tag">-uroot</span> <span class="selector-tag">-p</span> <span class="selector-tag">database_name</span> <span class="selector-attr">[table_name1,...]</span> &gt;<span class="selector-tag">pathname</span><span class="selector-class">.sql</span></span><br></pre></td></tr></table></figure>
<h3 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h3><p>使用时需指定用户名，并使用-p 选项，再回车后键入密码。实际上是利用的<a href="#%E9%87%8D%E5%AE%9A%E5%90%91">重定向</a>来生成一个 sql 脚本文件。<br>该文件中包含各个 sql 语句。</p>
<p>重定向符号后面的是 sql 文件的路径。Linux 请使用<code>/</code>来表示目录结构。Windows 可以用<code>\</code> 也可以用 <code>/</code>。<br>比如：</p>
<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">mysqldump -uroot -p world &gt;/<span class="built_in">home</span>/jelly/<span class="built_in">config</span>/world.sql</span><br></pre></td></tr></table></figure>
<h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">mysqldump -uroot -p world &gt;<span class="string">d:</span><span class="regexp">/config/</span>world.sql</span><br><span class="line">mysqldump -uroot -p world &gt;<span class="string">d:</span>\config\world.sql**</span><br></pre></td></tr></table></figure>
<h3 id="备份部分表"><a href="#备份部分表" class="headerlink" title="备份部分表"></a>备份部分表</h3><p>如果不想备份整个数据库，而是像备份某个表，那么在数据库后面指定表的名称。</p>
<h1 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h1><p>执行已备份的 sql 脚本文件。有两种方案：</p>
<h2 id="已连接数据库时"><a href="#已连接数据库时" class="headerlink" title="已连接数据库时"></a>已连接数据库时</h2><p>登录 mysql 命令行，使用 source 命令（与 mysqldump 不同，source 不是独立工具，而是 MySQL 内部命令）来执行 sql 脚本。<br>需要先创建一个数据库，然后切换到给数据库，再执行该命令。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">source</span> d:<span class="regexp">/tool/</span>world.sql</span><br></pre></td></tr></table></figure>
<h2 id="未连接数据库时"><a href="#未连接数据库时" class="headerlink" title="未连接数据库时"></a>未连接数据库时</h2><p>直接在 shell 的命令行执行：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p &lt; /<span class="built_in">home</span>/jelly/<span class="built_in">config</span>/world.sql</span><br></pre></td></tr></table></figure>
<h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><p>存储引擎是基于表的，不是基于数据库的。</p>
<table>
<thead>
<tr>
<th>功能</th>
<th style="text-align:center">MyISAM</th>
<th style="text-align:center">InnoDB</th>
<th style="text-align:center">Memory</th>
<th style="text-align:center">Archive</th>
</tr>
</thead>
<tbody>
<tr>
<td>存储限制</td>
<td style="text-align:center">256T</td>
<td style="text-align:center">64T</td>
<td style="text-align:center">有</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td>事务安全</td>
<td style="text-align:center">-</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td>索引支持</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td>锁颗粒</td>
<td style="text-align:center">表锁</td>
<td style="text-align:center">行锁</td>
<td style="text-align:center">表锁</td>
<td style="text-align:center">行锁</td>
</tr>
<tr>
<td>数据压缩</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">支持</td>
</tr>
<tr>
<td>外键</td>
<td style="text-align:center">-</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
</tbody>
</table>
<p>以上是常用引擎，另外还有其他存储引擎。</p>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/vab07n/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[MySQL命令]]></title>
      <link>https://www.wztlink1013.com/blog/emv1ek/</link>
      <guid>https://www.wztlink1013.com/blog/emv1ek/</guid>
      <pubDate>Wed Sep 23 2020 14:14:21 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[记录MySQL命令常用语法]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="登陆命令"><a href="#登陆命令" class="headerlink" title="登陆命令"></a>登陆命令</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -u用户名 -p密码</span><br></pre></td></tr></table></figure>
<p>用户名和-u 选项之间可以有空格，但是密码和-p 选项之间必须无空格。但是这样密码会是明文。你可以在键入-p 之后，回车再输入密码，就是密文。</p>
<h3 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h3><table>
<thead>
<tr>
<th>缩写</th>
<th>全写</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>-h</td>
<td>–host</td>
<td>主机</td>
</tr>
<tr>
<td>-p</td>
<td>–password</td>
<td>密码</td>
</tr>
<tr>
<td>-P</td>
<td>–port</td>
<td>端口</td>
</tr>
<tr>
<td>-V</td>
<td>–version</td>
<td>版本信息</td>
</tr>
<tr>
<td>-u</td>
<td>–user</td>
<td>用户</td>
</tr>
<tr>
<td></td>
<td>–prompt</td>
<td>修改提示符</td>
</tr>
</tbody>
</table>
<h4 id="–prompt"><a href="#–prompt" class="headerlink" title="–prompt"></a>–prompt</h4><p>–prompt 支持几个转义词组</p>
<ul>
<li>\h 主机名</li>
<li>\D 完整日期</li>
<li>\d 当前数据库</li>
<li>\u 当前用户</li>
</ul>
<h2 id="登陆之后"><a href="#登陆之后" class="headerlink" title="登陆之后"></a>登陆之后</h2><h3 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h3><ul>
<li>exit</li>
<li>quit</li>
<li>\q</li>
</ul>
<p>都能退出 mysql，系统显示 Bye。</p>
<h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><p>键入<code>help</code>或<code>\h</code>。</p>
<h3 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息"></a>显示信息</h3><p>select:</p>
<ul>
<li>version(); 版本信息</li>
<li>now(); 当前时间</li>
<li>user(); 用户@主机名</li>
</ul>
<h3 id="使用系统命令"><a href="#使用系统命令" class="headerlink" title="使用系统命令"></a>使用系统命令</h3><p><strong>!</strong> 后加 shell 命令可以在 mysql 中执行 shell 命令。</p>
<blockquote>
<p>gdb 使用 shell 加命令来执行 shell 命令。</p>
</blockquote>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/emv1ek/#comments</comments>
    </item>
    
    <item>
      <title><![CDATA[SQL语句的优化]]></title>
      <link>https://www.wztlink1013.com/blog/ix3gza/</link>
      <guid>https://www.wztlink1013.com/blog/ix3gza/</guid>
      <pubDate>Wed Sep 23 2020 14:13:00 GMT+0000 (Coordinated Universal Time)</pubDate>
      <description>
      <![CDATA[SQL语句的优化]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="IN-操作优化"><a href="#IN-操作优化" class="headerlink" title="IN 操作优化"></a>IN 操作优化</h2><ul>
<li>IN 后面只能接常量，且最多不超过 200 个</li>
<li>IN 后面不能接子查询</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> tb1.id <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> tb2 <span class="keyword">where</span> tb2.c1...)</span><br><span class="line">// 优化后：</span><br><span class="line"><span class="keyword">select</span> tb1.* <span class="keyword">from</span> tb1, (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> tb2 <span class="keyword">where</span> tb2.c1...)t <span class="keyword">where</span> tb1.id = t.id;</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>https://www.wztlink1013.com/blog/ix3gza/#comments</comments>
    </item>
    
  </channel>
</rss>
